{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/wishReducers.js","constants/wishContants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","reducers/categoryReducers.js","constants/categoryConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","actions/cartActions.js","components/Message.js","components/Product.js","actions/wishActions.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/Meta.js","actions/categoryActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/orderActions.js","screens/ProfileScreen.js","screens/LoginScreen.js","components/FormContainer.js","screens/RegisterScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/CategoryListScreen.js","screens/CategoryEditScreen.js","screens/CategoryProductsScreen.js","screens/WishlistScreen.js","screens/BasketScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","wish","wishItems","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","categoryList","categories","categoryDetails","category","categoryCreate","categoryUpdate","categoryDelete","cartItemsFromStorage","localStorage","getItem","JSON","parse","wishItemsFromStorage","userInfoFromStorage","initialState","wishlist","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Search","Input","SearchBox","history","useState","keyword","setKeyword","Form","className","placeholder","size","onChange","e","target","value","onSearch","trim","push","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","updateUserProfile","put","setItem","stringify","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","isAdmin","NavDropdown","title","Item","class","Footer","Row","Col","xs","sm","md","lg","xl","Rating","text","color","style","defaultProps","addToCart","qty","_id","name","image","price","countInStock","removeFromCart","Message","children","Alert","Product","isHovered","setIsHovered","discountPercentage","setDiscountPercentage","newPrice","setNewPrice","useEffect","randomPercentage","Math","floor","random","calculateNewPrice","toFixed","open","setOpen","handleWishlistAdd","console","log","userId","productId","post","data2","Card","onMouseEnter","onMouseLeave","Img","src","alt","onClick","Body","Title","Text","as","rating","Button","showDrawer","percent","cartTotal","reduce","total","round","calculateProgress","showInfo","placement","onClose","visible","length","Table","responsive","key","Control","Number","Array","keys","ListGroup","acc","disabled","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","active","listProducts","pageNumber","listProductDetails","deleteProduct","delete","createProduct","Meta","description","keywords","Helmet","content","listCategories","HomeScreen","match","params","overflowX","whiteSpace","scrollbarWidth","i","index","ProductScreen","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","Image","fluid","numReviews","review","createdAt","substring","onSubmit","preventDefault","Group","controlId","Label","row","listMyOrders","ProfileScreen","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","setMessage","pathname","useLocation","loadingOrders","errorOrders","logoutHandler","striped","bordered","hover","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","addToCartHandler","LoginScreen","redirect","search","split","initialValues","remember","onFinish","values","username","login","layout","labelCol","span","wrapperCol","onFinishFailed","errorInfo","autoComplete","label","rules","required","Password","valuePropName","offset","htmlType","FormContainer","RegisterScreen","register","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","Check","checked","PlaceOrderScreen","addDecimals","num","itemsPrice","shippingPrice","taxPrice","rounded","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","deleteUser","UserEditScreen","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","CategoryListScreen","createdCategory","deleteCategory","categoryData","CategoryEditScreen","categoryId","CategoryProductsScreen","data-name","data-type","data-value","WishlistScreen","BasketScreen","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3d431ff6.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { wishReducer } from './reducers/wishReducers'\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nimport {\n  categoryListReducer,\n  categoryDetailsReducer,\n  categoryCreateReducer,\n  categoryUpdateReducer,\n  categoryDeleteReducer,\n} from './reducers/categoryReducers';\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  wish:wishReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  \n  categoryList: categoryListReducer,\n  categoryDetails: categoryDetailsReducer,\n  categoryCreate: categoryCreateReducer,\n  categoryUpdate: categoryUpdateReducer,\n  categoryDelete: categoryDeleteReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\n  const wishItemsFromStorage = localStorage.getItem('wishItems')\n  ? JSON.parse(localStorage.getItem('wishItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  wishlist:{\n    wishItems:wishItemsFromStorage\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n    WISH_ADD_ITEM,\n    WISH_REMOVE_ITEM,\n    WISH_CLEAR_ITEMS,\n  } from '../constants/wishContants'\n  \n  export const wishReducer = (\n    state = { wishItems: [] },\n    action\n  ) => {\n    switch (action.type) {\n      case WISH_ADD_ITEM:\n        const item = action.payload\n  \n        const existItem = state.wishItems.find((x) => x.product === item.product)\n  \n        if (existItem) {\n          return {\n            ...state,\n            wishItems: state.wishItems.map((x) =>\n              x.product === existItem.product ? item : x\n            ),\n          }\n        } else {\n          return {\n            ...state,\n            wishItems: [...state.wishItems, item],\n          }\n        }\n      case WISH_REMOVE_ITEM:\n        return {\n          ...state,\n          wishItems: state.wishItems.filter((x) => x.product !== action.payload),\n        }\n     \n      case WISH_CLEAR_ITEMS:\n        return {\n          ...state,\n          wishItems: [],\n        }\n      default:\n        return state\n    }\n  }\n  ","export const WISH_ADD_ITEM = 'WISH_ADD_ITEM'\nexport const WISH_CLEAR_ITEMS = 'WISH_RESET'\nexport const WISH_REMOVE_ITEM = 'WISH_REMOVE_ITEM'","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import {\n    CATEGORY_LIST_REQUEST,\n    CATEGORY_LIST_SUCCESS,\n    CATEGORY_LIST_FAIL,\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n    CATEGORY_CREATE_RESET,\n    CATEGORY_UPDATE_REQUEST,\n    CATEGORY_UPDATE_SUCCESS,\n    CATEGORY_UPDATE_FAIL,\n    CATEGORY_UPDATE_RESET,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n  } from '../constants/categoryConstants';\n  \n  export const categoryListReducer = (state = { categories: [] }, action) => {\n    switch (action.type) {\n      case CATEGORY_LIST_REQUEST:\n        return { loading: true, categories: [] };\n      case CATEGORY_LIST_SUCCESS:\n        return { loading: false, categories: action.payload };\n      case CATEGORY_LIST_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryDetailsReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n      case CATEGORY_DETAILS_REQUEST:\n        return { loading: true, ...state };\n      case CATEGORY_DETAILS_SUCCESS:\n        return { loading: false, category: action.payload };\n      case CATEGORY_DETAILS_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n      case CATEGORY_CREATE_REQUEST:\n        return { loading: true };\n      case CATEGORY_CREATE_SUCCESS:\n        return { loading: false, success: true, category: action.payload };\n      case CATEGORY_CREATE_FAIL:\n        return { loading: false, error: action.payload };\n      case CATEGORY_CREATE_RESET:\n        return {};\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryUpdateReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n      case CATEGORY_UPDATE_REQUEST:\n        return { loading: true };\n      case CATEGORY_UPDATE_SUCCESS:\n        return { loading: false, success: true, category: action.payload };\n      case CATEGORY_UPDATE_FAIL:\n        return { loading: false, error: action.payload };\n      case CATEGORY_UPDATE_RESET:\n        return { category: {} };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n      case CATEGORY_DELETE_REQUEST:\n        return { loading: true };\n      case CATEGORY_DELETE_SUCCESS:\n        return { loading: false, success: true };\n      case CATEGORY_DELETE_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  ","export const CATEGORY_LIST_REQUEST = 'CATEGORY_LIST_REQUEST';\nexport const CATEGORY_LIST_SUCCESS = 'CATEGORY_LIST_SUCCESS';\nexport const CATEGORY_LIST_FAIL = 'CATEGORY_LIST_FAIL';\n\nexport const CATEGORY_DETAILS_REQUEST = 'CATEGORY_DETAILS_REQUEST';\nexport const CATEGORY_DETAILS_SUCCESS = 'CATEGORY_DETAILS_SUCCESS';\nexport const CATEGORY_DETAILS_FAIL = 'CATEGORY_DETAILS_FAIL';\n\nexport const CATEGORY_CREATE_REQUEST = 'CATEGORY_CREATE_REQUEST';\nexport const CATEGORY_CREATE_SUCCESS = 'CATEGORY_CREATE_SUCCESS';\nexport const CATEGORY_CREATE_FAIL = 'CATEGORY_CREATE_FAIL';\nexport const CATEGORY_CREATE_RESET = 'CATEGORY_CREATE_RESET';\n\nexport const CATEGORY_UPDATE_REQUEST = 'CATEGORY_UPDATE_REQUEST';\nexport const CATEGORY_UPDATE_SUCCESS = 'CATEGORY_UPDATE_SUCCESS';\nexport const CATEGORY_UPDATE_FAIL = 'CATEGORY_UPDATE_FAIL';\nexport const CATEGORY_UPDATE_RESET = 'CATEGORY_UPDATE_RESET';\n\nexport const CATEGORY_DELETE_REQUEST = 'CATEGORY_DELETE_REQUEST';\nexport const CATEGORY_DELETE_SUCCESS = 'CATEGORY_DELETE_SUCCESS';\nexport const CATEGORY_DELETE_FAIL = 'CATEGORY_DELETE_FAIL';\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { Input } from 'antd';\n\n\nconst { Search } = Input;\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = () => {\n    \n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n  <Form className='w-100'>\n\n<Search\n      placeholder=\"Search Products\"\n      \n      size=\"large\"\n      onChange={(e) => setKeyword(e.target.value)}\n      \n      onSearch={(e)=>submitHandler(e)}\n    />\n\n</Form>\n    \n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      'https://bobliquorstoreapi.onrender.com/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/my-account/'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      'https://bobliquorstoreapi.onrender.com/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`https://bobliquorstoreapi.onrender.com/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`https://bobliquorstoreapi.onrender.com/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown, Row, Col, Dropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport { Home, Favorite, AccountCircle, ShoppingCart } from '@material-ui/icons';\nconst Header = ({categories}) => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n  const cartItemsCount = 5; // Replace this with the actual count of cart items\n\n  return (\n    <>\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>\n              {/* <img src=\"https://www.oaks.delivery/wp-content/uploads/onc-logo-svg-header.svg\"/> */}\n            Drink&Chill</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) =>   <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n           \n              <LinkContainer to='/wishlist'>\n                  <Nav.Link>\n                  <div className=\"icon-text-wrapper\">\n        <i className=\"fas fa-heart\"></i>\n        <span>Wishlist</span>\n      </div>\n                  </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                    <LinkContainer to='/my-account/'>\n                    <Nav.Link>\n                    <div className=\"icon-text-wrapper\">\n                      <i className='fas fa-user'></i> \n                      <span>Account</span>\n                    </div>\n                    </Nav.Link>\n                  </LinkContainer>\n                // <NavDropdown title={userInfo.name} id='username'>\n                //   <LinkContainer to='/profile'>\n                //     <NavDropdown.Item>Profile</NavDropdown.Item>\n                //   </LinkContainer>\n                //   <NavDropdown.Item onClick={logoutHandler}>\n                //     Logout\n                //   </NavDropdown.Item>\n                // </NavDropdown>\n              ) : (\n                <LinkContainer to='/my-account/'>\n                  <Nav.Link>\n                  <div className=\"icon-text-wrapper\">\n                    <i className='fas fa-user'></i> \n                    <span>Account</span>\n                  </div>\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                  //   <LinkContainer to='/my-account'>\n                  //   <Nav.Link>\n                  //   <div className=\"icon-text-wrapper\">\n                  //     <i className='fas fa-user'></i> \n                  //     <span>Account</span>\n                  //   </div>\n                  //   </Nav.Link>\n                  // </LinkContainer>\n\n                <NavDropdown title={ <div className=\"icon-text-wrapper\">\n                <i className='fas fa-user'></i> \n                <span>Admin</span>\n              </div>} id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/categorylist'>\n                    <NavDropdown.Item>Categories</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n                 <LinkContainer to='/basket'>\n                <Nav.Link>\n\n                  <div className=\"icon-text-wrapper\">\n                    <i className='fas fa-shopping-cart'></i>\n                    <span>basket</span>\n                  </div>\n\n                </Nav.Link>\n              </LinkContainer>\n\n              <LinkContainer to='/checkout'>\n                <Nav.Link>\n\n                  <div className=\"icon-text-wrapper\">\n                  <i class=\"fas fa-arrow-right\"></i>\n                    {/* <i className='fas fa-shopping-cart'></i> */}\n                    <span>checkout</span>\n                  </div>\n\n                </Nav.Link>\n              </LinkContainer>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n\n    {/* <Row>\n      <Container>\n        <div className='d-flex'>\n          <div className='w-50 d-flex'>\n          \n          {categories && categories.map((category)=>(\n              <div className='mx-2'>\n            <Dropdown>\n            <Dropdown.Toggle id=\"dropdown-basic\">\n          \n           {category.name}\n           \n           </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n          <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n          </Dropdown.Menu>\n          </Dropdown>\n          </div>\n          ))}\n         \n          \n          </div>\n          <div className='w-50'>\n          <Nav.Link className=\"position-relative\">\n  <i className=\"fas fa-shopping-cart\"></i>\n  {cartItemsCount > 0 && (\n    <span className=\"cart-items-count\">{cartItemsCount}</span>\n  )}\n</Nav.Link>\n          </div>\n        </div>\n       \n      </Container>\n      </Row> */}\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\n\nconst Footer = () => {\n  return (\n    <>\n<section className=\"\">\n  <Container className=\"text-center text-md-start mt-5\">\n    <Row>\n      <Col xs={12} sm={3} md={3} lg={3} xl={3} className=\"text-left\">\n        <div id=\"custom_html-10\" className=\"widget_text widget widget_custom_html\">\n          <b className=\"gamma widget-title\">Over 1300 drinks available</b>\n          <div className=\"textwidget custom-html-widget\">\n            <p>Drinks &amp; Chills has a wide selection of wines, gins, vodkas, rums, tequila, liqueurs, and other drinks to choose from.</p>\n          </div>\n        </div>\n      </Col>\n\n      <Col xs={12} sm={3} md={3} lg={3} xl={3} className=\"text-left\">\n        <div id=\"custom_html-8\" className=\"widget_text widget widget_custom_html\">\n          <span className=\"gamma widget-title\">24/7 Express Delivery</span>\n          <div className=\"textwidget custom-html-widget\">\n            <p>We deliver any time, any day, in <strong>less than 1 hour</strong> - average: 23 min. We also offer next-day countrywide alcohol delivery in Kenya.</p>\n          </div>\n        </div>\n      </Col>\n    \n      <Col xs={12} sm={3} md={3} lg={3} xl={3} className=\"text-left\">\n        <div id=\"custom_html-9\" className=\"widget_text widget widget_custom_html\">\n          <span className=\"gamma widget-title\">Free pick up</span>\n          <div className=\"textwidget custom-html-widget\">\n            <p>At any of our store locations.</p>\n          </div>\n        </div>\n      </Col>\n\n      <Col xs={12} sm={3} md={3} lg={3} xl={3} className=\"text-left\">\n        <div id=\"custom_html-11\" className=\"widget_text widget widget_custom_html\">\n          <span className=\"gamma widget-title\">100% Secure Checkout</span>\n          <div className=\"textwidget custom-html-widget\">\n            <p>Pay online with M-Pesa Express, Online VISA (3D Secure), PayPal and BitPay. We also accept Cash and PDQ (card payment) on delivery.</p>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  </Container>\n</section>\n\n\n      <footer className=\"text-center text-lg-start   text-light\">\n      {/* Section: Social media */}\n     \n      {/* Section: Social media */}\n\n      {/* Section: Links */}\n      <section className=\"\">\n        <Container className=\"text-center text-md-start mt-5\">\n          {/* Grid row */}\n          <Row className=\"mt-3\">\n            {/* Grid column */}\n            <Col md=\"3\" lg=\"4\" xl=\"3\" className=\"mx-auto mb-4\">\n              {/* Content */}\n              <p className=\"text-uppercase fw-bold mb-4\">\n               About Drinks & Chill\n              </p>\n              \n            </Col>\n            {/* Grid column */}\n\n            {/* Grid column */}\n            <Col md=\"2\" lg=\"2\" xl=\"2\" className=\"mx-auto mb-4\">\n              {/* Links */}\n              <p className=\"text-uppercase fw-bold mb-4\">\n                Liquor Store near me\n              </p>\n              \n            </Col>\n            {/* Grid column */}\n\n            {/* Grid column */}\n            <Col md=\"3\" lg=\"2\" xl=\"2\" className=\"mx-auto mb-4\">\n              {/* Links */}\n              <p className=\"text-uppercase fw-bold mb-4\">\n                Recent Posts\n              </p>\n             \n            </Col>\n            {/* Grid column */}\n\n            {/* Grid column */}\n            <Col md=\"4\" lg=\"3\" xl=\"3\" className=\"mx-auto mb-md-0 mb-4\">\n              {/* Links */}\n              <p className=\"text-uppercase fw-bold mb-4\">Recent Product Reviews</p>\n             \n            </Col>\n            {/* Grid column */}\n          </Row>\n          {/* Grid row */}\n        </Container>\n      </section>\n      {/* Section: Links */}\n\n      {/* Copyright */}\n      {/* <div className=\"text-center p-4\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}>\n       \n        <a className=\"text-reset fw-bold\" href=\"\">DevNgecu</a> © 2023\n      </div> */}\n      <Row>\n        <Col md={6} className='py-2'>\n        © Drink & Chill  2023\n        <br/>\n        Built with love by DevNgecu\n        </Col>\n        <Col md={6}>\n          <Link className=\"text-danger\" to=\"#\">\n          <i class=\"fas fa-phone\"></i> +254707583092\n          </Link>\n          <Link to=\"#\" className=\"text-secondary\">\n            | +254759594677\n          </Link>\n        </Col>\n      </Row>\n      {/* Copyright */}\n    </footer>\n\n    </>\n    \n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React, { useState, useEffect } from 'react';\nimport { Button, Card, Col, Form, Image, ListGroup, Row, Table } from 'react-bootstrap';\nimport Rating from './Rating'\nimport { Drawer, Progress } from 'antd';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from './Message';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport { addToWish } from '../actions/wishActions';\n\nconst Product = ({ product }) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [discountPercentage, setDiscountPercentage] = useState(0);\n  const [newPrice, setNewPrice] = useState(product.price);\n  const dispatch = useDispatch()\n\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  useEffect(() => {\n    const randomPercentage = Math.floor(Math.random() * 11); // Generates a random integer between 0 and 10\n    setDiscountPercentage(randomPercentage);\n\n    const calculateNewPrice = product.price - (product.price * randomPercentage) / 100;\n    setNewPrice(calculateNewPrice.toFixed(2));\n  }, [product.price]);\n\n\n  const [open, setOpen] = useState(false);\n\n  const handleWishlistAdd = (product)=>{\n    console.log(\"prodcut addeing to wishlist\")\n    const productId = product._id\n    dispatch(addToWish(productId, userInfo._id))\n  }\n\n  const showDrawer = (product) => {\n    const productId = product._id\n    dispatch(addToCart(productId, 1))\n\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    // navigate.push('/login?redirect=shipping')\n  }\n\n  const calculateProgress = () => {\n    const totalCash = 15000; // Set the total cash amount\n    const cartTotal = cartItems.reduce(\n      (total, item) => total + item.qty * item.price,\n      0\n    );\n    const progressPercentage = Math.round((cartTotal / totalCash) * 100);\n    return progressPercentage;\n  };\n\n  return (\n    <>\n     <Card\n      className={`product-card ${isHovered ? 'hovered' : ''}`}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className=\"product-image\">\n        <Card.Img variant=\"top\" src={product.image} alt={product.name} />\n        {isHovered && (\n          <div className=\"wishlist-icon\" onClick={(e)=>handleWishlistAdd(product)}>\n            <i className=\"fas fa-heart\"></i>\n          </div>\n        )}\n        {discountPercentage > 0 && (\n          <div className=\"discount-badge\">\n            <p>-{discountPercentage}%</p>\n          </div>\n        )}\n      </div>\n      <Card.Body>\n        <Card.Title><Link to={`product/${product._id}`}>{product.name}</Link></Card.Title>\n        <Card.Text className='my-0'>\n          {discountPercentage > 0 && (\n            <del>{product.price}/-</del>\n          )}\n          <ins>{newPrice}/-</ins>\n        </Card.Text>\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            // text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n        <Button variant=\"success\" onClick={()=>showDrawer(product)} className=\"w-100\">\n          Add to basket\n        </Button>\n      </Card.Body>\n    </Card>\n    <Drawer\n      title={\n        <>\n          <p>Basket</p>\n          <Progress percent={calculateProgress()} showInfo={false} />\n          <div className='text-center'>\n            <small>Get free delivery for orders over 15,000/-</small>\n          </div>\n        </>\n      }\n      placement=\"right\"\n      onClose={onClose}\n      visible={open}\n    >\n      {cartItems.length === 0 ? (\n        <Message>\n          Your cart is empty <Link to=\"/\">Go Back</Link>\n        </Message>\n      ) : (\n        <>\n          <Table responsive className='table-sm'>\n            <tbody>\n              {cartItems.map((item) => (\n                <tr key={item.product}>\n                  <td>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                  <td>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    <br />\n                    {item.price}/-\n                    <br />\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(addToCart(item.product, Number(e.target.value)))\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </td>\n                  <td>\n                    <img src={item.image} className='w-100' alt={item.name} />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Card className='mt-auto'>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                  items\n                </h2>\n                Ksh.\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cartItems.length === 0}\n                  onClick={checkoutHandler}\n                >\n                  Proceed To Checkout\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </>\n      )}\n    </Drawer>\n    </>\n   \n  );\n};\n\nexport default Product;\n","import axios from 'axios'\n\nimport { WISH_ADD_ITEM, WISH_REMOVE_ITEM } from '../constants/wishContants'\n\nexport const addToWish = (id, userId) => async (dispatch, getState) => {\n  const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/${id}`)\n\n  localStorage.setItem('wishItems', JSON.stringify(getState().wish.wishItems))\n\n  try {\n    const { data: data2 } = await axios.post(`https://bobliquorstoreapi.onrender.com/api/users/addToWish/${userId}`, { productId: id })\n\n    dispatch({\n      type: WISH_ADD_ITEM,\n      payload: data2,\n    })\n  } catch (error) {\n    console.error('Failed to add product to wishlist:', error.message)\n  }\n}\n\nexport const removeFromWish = (id, userId) => async (dispatch, getState) => {\n  localStorage.setItem('wishItems', JSON.stringify(getState().wish.wishItems))\n\n  try {\n    await axios.post(`https://bobliquorstoreapi.onrender.com/api/users/removeFromWish/${userId}`,  { productId: id } )\n\n    dispatch({\n      type: WISH_REMOVE_ITEM,\n      payload: id,\n    })\n\n    localStorage.setItem('wishtItems', JSON.stringify(getState().wish.wishtItems))\n  } catch (error) {\n    console.error('Failed to remove product from wishlist:', error.message)\n  }\n}\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `https://bobliquorstoreapi.onrender.com/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://bobliquorstoreapi.onrender.com/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`https://bobliquorstoreapi.onrender.com/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Drink&Chill',\n  description: 'We sell the best products for cheap',\n  keywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta\n","import axios from 'axios';\nimport {\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n  CATEGORY_LIST_FAIL,\n  CATEGORY_DETAILS_REQUEST,\n  CATEGORY_DETAILS_SUCCESS,\n  CATEGORY_DETAILS_FAIL,\n  CATEGORY_CREATE_REQUEST,\n  CATEGORY_CREATE_SUCCESS,\n  CATEGORY_CREATE_FAIL,\n  CATEGORY_CREATE_RESET,\n  CATEGORY_UPDATE_REQUEST,\n  CATEGORY_UPDATE_SUCCESS,\n  CATEGORY_UPDATE_FAIL,\n  CATEGORY_UPDATE_RESET,\n  CATEGORY_DELETE_REQUEST,\n  CATEGORY_DELETE_SUCCESS,\n  CATEGORY_DELETE_FAIL,\n} from '../constants/categoryConstants';\n\n// Action to fetch all categories\nexport const listCategories = () => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_LIST_REQUEST });\n\n    const { data } = await axios.get('https://bobliquorstoreapi.onrender.com/api/categories');\n\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to fetch category details\nexport const getCategoryDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/categories/${id}`);\n\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to create a new category\nexport const createCategory = (categoryData) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post('https://bobliquorstoreapi.onrender.com/api/categories', categoryData, config);\n\n    dispatch({\n      type: CATEGORY_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to update a category\nexport const updateCategory = (categoryData) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/categories/${categoryData._id}`,\n      categoryData,\n      config\n    );\n\n    dispatch({\n      type: CATEGORY_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to delete a category\nexport const deleteCategory = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/categories/${id}`, config);\n\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Container, Card, CardDeck } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\nimport { Skeleton } from 'antd'\nimport { listCategories } from '../actions/categoryActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { categories } = categoryList\n\n  useEffect(() => {\n    dispatch(listCategories())\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        // <ProductCarousel />\n        <>\n        {loading ? (\n        <Skeleton active />):(\n          <img src=\"https://www.oaks.delivery/wp-content/uploads/banner-1.png\" className='w-100' />\n        )\n        }\n        </>\n       \n      ) : (\n        <Container>\n        <Link to='/' className='btn btn-primary'>\n          Go Back\n        </Link>\n        </Container>\n      )}\n      <Container>\n      <>\n\n      <Row className='my-2'>\n          {categories && categories.map((category)=>(\n            <Col key={category._id} xs={6} sm={6} md={3} lg={3} xl={3}>\n                <Link to={`/category/${category._id}`}>\n                <Card>\n                \n                  <Card.Img src={category.image} variant='top' />\n               \n\n                  <Card.Body className='text-center p-0'>\n       \n          <Card.Title as='div'>\n            <strong>{category.name}</strong>\n          </Card.Title>\n\n      </Card.Body>\n\n                </Card>\n                </Link>\n            \n          </Col>\n          ))}\n\n        </Row>\n        \n      {!keyword ? <h6>New Arrivals</h6> : <h6>{keyword} Results</h6> }\n      </>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n       <div style={{ overflowX: 'auto', whiteSpace: 'nowrap', scrollbarWidth: 'none', '-ms-overflow-style': 'none' }}>\n  <style>\n    {`\n      div::-webkit-scrollbar {\n        width: 0.5em;\n        height: 0.5em;\n      }\n      div::-webkit-scrollbar-thumb {\n        background-color: rgba(0, 0, 0, 0.5);\n      }\n    `}\n  </style>\n  <Row className='flex-nowrap'>\n    {products.map((product) => (\n      <Col key={product._id} xs={6} sm={6} md={3} lg={3} xl={3} className='px-1'>\n        <Product product={product} />\n      </Col>\n    ))}\n  </Row>\n</div>\n        </>\n      )}\n\n\n{!keyword && categories && categories.map((i,index)=>(\n  <>\n  <h6>{i.name}(S)\n  \n  <Link\n                to={`/category/${i._id}`}\n                className=\"float-right\"\n              >\n                View All &rarr;\n              </Link>\n\n  </h6>\n  <div style={{ overflowX: 'auto', whiteSpace: 'nowrap', scrollbarWidth: 'none', '-ms-overflow-style': 'none' }}>\n  <style>\n    {`\n      div::-webkit-scrollbar {\n        width: 0.5em;\n        height: 0.5em;\n      }\n      div::-webkit-scrollbar-thumb {\n        background-color: rgba(0, 0, 0, 0.5);\n      }\n    `}\n  </style>\n  <Row>\n  {products\n    .filter((product) => product.category === i._id)\n    .map((product) => (\n      <Col key={product._id} xs={6} sm={6} md={3} lg={3} xl={3} className=\"h-100\">\n        <Product product={product} />\n      </Col>\n    ))}\n</Row>\n</div>\n</>\n)) }\n</Container>\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form, Container } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport Product from '../components/Product'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <Container>\n      {/* <Link className='btn btn-primary my-3' to='/'>\n        Go Back\n      </Link> */}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={6}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: Ksh.{product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>Ksh.{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n\n            </Col>\n            \n          </Row>\n          <Row>\n            <Col md={12}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/my-account/'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n\n          <Row className='flex-nowrap'>\n            You may also like...\n    {/* {products.map((product) => (\n      <Col key={product._id} xs={6} sm={6} md={3} lg={3} xl={3} className='px-1'>\n        <Product product={product} />\n      </Col>\n    ))} */}\n  </Row>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://bobliquorstoreapi.onrender.com/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col, ListGroup } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, logout, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { Link,useLocation } from 'react-router-dom'\nimport { addToCart } from '../actions/cartActions'\n\nconst ProfileScreen = ({ history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n\n  const location = useLocation();\n  const { pathname } = location;\n\n\n  console.log(pathname)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n  const wish = useSelector((state) => state.wish)\n  const { wishItems } = wish\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/my-account/')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  const addToCartHandler = (product) => {\n    const productId = product._id\n    dispatch(addToCart(productId, 1))\n  };\n  \n  return (\n    <>\n    <h2>My Account</h2>\n    <Row>\n       \n      <Col md={3}>\n       \n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <ListGroup>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--dashboard is-active\">\n            <Link to=\"/my-account/\">Dashboard</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--orders\">\n            <Link to=\"/my-account/orders/\">Orders</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--purchased-products\">\n            <Link to=\"/my-account/purchased-products/\">Purchased Products</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--edit-account\">\n            <Link to=\"/my-account/edit-account/\">Account details</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--cgkit-wishlist\">\n            <Link to=\"/my-account/cgkit-wishlist/\">My wishlist</Link>\n          </ListGroup.Item>\n          {/* <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--lws_woorewards\">\n            <Link to=\"/my-account/lws_woorewards/\">Loyalty and Rewards</Link>\n          </ListGroup.Item> */}\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--customer-logout\">\n            <Link onClick={logoutHandler}>Log out</Link>\n          </ListGroup.Item>\n        </ListGroup>\n\n          // <Form onSubmit={submitHandler}>\n          //   <Form.Group controlId='name'>\n          //     <Form.Label>Name</Form.Label>\n          //     <Form.Control\n          //       type='name'\n          //       placeholder='Enter name'\n          //       value={name}\n          //       onChange={(e) => setName(e.target.value)}\n          //     ></Form.Control>\n          //   </Form.Group>\n\n          //   <Form.Group controlId='email'>\n          //     <Form.Label>Email Address</Form.Label>\n          //     <Form.Control\n          //       type='email'\n          //       placeholder='Enter email'\n          //       value={email}\n          //       onChange={(e) => setEmail(e.target.value)}\n          //     ></Form.Control>\n          //   </Form.Group>\n\n          //   <Form.Group controlId='password'>\n          //     <Form.Label>Password</Form.Label>\n          //     <Form.Control\n          //       type='password'\n          //       placeholder='Enter password'\n          //       value={password}\n          //       onChange={(e) => setPassword(e.target.value)}\n          //     ></Form.Control>\n          //   </Form.Group>\n\n          //   <Form.Group controlId='confirmPassword'>\n          //     <Form.Label>Confirm Password</Form.Label>\n          //     <Form.Control\n          //       type='password'\n          //       placeholder='Confirm password'\n          //       value={confirmPassword}\n          //       onChange={(e) => setConfirmPassword(e.target.value)}\n          //     ></Form.Control>\n          //   </Form.Group>\n\n          //   <Button type='submit' variant='primary'>\n          //     Update\n          //   </Button>\n          // </Form>\n        )}\n      </Col>\n      <Col md={9}>\n      {pathname === '/my-account/' && (\n        <>\n      Hello <b><strong>{user.email}</strong></b> (not {user.email} <Link onClick={logoutHandler}>Log out </Link>)\n\nFrom your account dashboard you can view your <Link to=\"/orders\">recent orders</Link>, manage your <Link to=\"edit-address\"> shipping and billing </Link> addresses, and <Link to=\"/edit-account\"> edit your password and account details.</Link>\n        {/* <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )} */}\n        </>)}\n\n        {pathname === '/my-account/orders/' && (\n        <>\n                  <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ): orders.length === 0 ? (\n          <Message>\n            <p>No order has been made yet.</p>\n            <p>\n              <Link to=\"/\">Browse Products</Link>\n            </p>\n          </Message>)\n         : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n        </>\n      )}\n\n{pathname === '/my-account/purchased-products/' && (\n  <>\n    <h2>My Purchases</h2>\n    {loadingOrders ? (\n      <Loader />\n    ) : errorOrders ? (\n      <Message variant='danger'>{errorOrders}</Message>\n    ) : orders.length === 0 ? (\n      <Message>\n        <p>No order has been made yet.</p>\n        <p>\n          <Link to=\"/\">Browse Products</Link>\n        </p>\n      </Message>\n    ) : (\n      <Table striped bordered hover responsive className='table-sm'>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>DATE</th>\n            <th>TOTAL</th>\n            <th>PAID</th>\n            <th>DELIVERED</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders\n            .filter((order) => order.isPaid) // Filter only the orders that have been paid\n            .map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button className='btn-sm' variant='light'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    )}\n  </>\n)}\n\n{pathname === '/my-account/edit-account/' && (\n        <>\n        {/* <h2>User Profile</h2> */}\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n        </>\n      )}\n\n{pathname === '/my-account/cgkit-wishlist/' && (\n      <>\n      {wishItems.length === 0 ? (\n        <Message>\n          Your Wishlist is empty \n        </Message>\n      ) : (\n        \n          <Table responsive className='table-sm'>\n            <thead>\n                <tr>\n                   <th>Product</th>\n                   <th>Price</th>\n                   <th>Stock Status</th> \n                </tr>\n            </thead>\n            <tbody>\n              {wishItems.map((item) => (\n                <tr key={item.product}>\n                  <td>\n                  <img src={item.image} width={100} />\n                  {item.name}\n                  </td>\n                 <td>\n                    {item.price}\n                 </td>\n                 <td>\n                    <b className='text-success'>In stock</b>\n                 </td>\n                 <td>\n                    <Button type=\"button\" variant=\"success\" onClick={(e)=>addToCartHandler(item)}>Add To Cart</Button>\n                 </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n  )\n}\n</>\n\n)}\n\n{pathname === '/my-account/lws_woorewards/' && (\n      <>\n     <h1>Your Points Balance</h1>\n     <h2 className='border'>0 Points</h2>\n     <h1>Available Rewards</h1>\n     <h1>How to earn points</h1>\n     <h2>\n      Spand Money\n      <br/>\n      1 Point/ 100/-\n     </h2>\n</>\n\n)}\n\n      </Col>\n    </Row>\n    </>\n  )\n}\n\nexport default ProfileScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {  Button, Row, Col, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { login } from '../actions/userActions'\nimport { Checkbox, Form, Input } from 'antd'\nimport ProfileScreen from './ProfileScreen'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [message,] = useState(null);\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    // if (userInfo) {\n    //   history.push(redirect)\n    // }\n  }, [history, userInfo, redirect])\n\n  const submitLoginHandler = (values) => {\n    console.log(\"submitted\");\n    const { username, password } = values;\n    dispatch(login(username, password));\n  };\n  const onFinish = (values) => {\n    console.log('Success:', values);\n  };\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Container>\n      {!userInfo ? <>\n        <h1>My Account</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n\n      <Row>\n        <Col md={6}>\n        {message && <Message variant='danger'>{message}</Message>}\n          <h3>Login</h3>\n          <Form\n            initialValues={{ remember: true }}\n            onFinish={submitLoginHandler}\n            layout=\"vertical\"\n            name=\"basic\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n          \n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n  >\n    <Form.Item\n      label=\"Username or email address\"\n      name=\"username\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your username or email!',\n        },\n      ]}\n    >\n      <Input\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n    </Form.Item>\n\n    <Form.Item\n      label=\"Password\"\n      name=\"password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!',\n        },\n      ]}\n    >\n      <Input.Password\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n      />\n    </Form.Item>\n\n    <Form.Item\n      name=\"remember\"\n      valuePropName=\"checked\"\n      wrapperCol={{\n        offset: 0,\n        span: 16,\n      }}\n    >\n      <Checkbox>Remember me</Checkbox>\n    </Form.Item>\n\n    <Form.Item\n      wrapperCol={{\n        offset: 0,\n        span: 16,\n      }}\n    >\n      <Button variant='success' type=\"submit\" htmlType=\"submit\">\n        Login\n      </Button>\n    </Form.Item>\n  </Form>\n  <Link to=\"#\">Lost Your Password</Link>\n\n\n        </Col>\n\n        <Col md={6}>\n          <h3>Register</h3>\n          {/* <Form\n           layout={\"vertical\"}\n    name=\"basic\"\n    labelCol={{\n      span: 8,\n    }}\n    wrapperCol={{\n      span: 16,\n    }}\n    // style={{\n    //   maxWidth: 600,\n    // }}\n    initialValues={{\n      remember: true,\n    }}\n    onFinish={onFinish}\n    onFinishFailed={onFinishFailed}\n    autoComplete=\"off\"\n  >\n    <Form.Item\n      label=\"Username\"\n      name=\"username\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your username!',\n        },\n      ]}\n    >\n      <Input />\n    </Form.Item>\n\n    <Form.Item\n      label=\"Password\"\n      name=\"password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!',\n        },\n      ]}\n    >\n      <Input.Password />\n    </Form.Item>\n\n    <Form.Item\n      name=\"remember\"\n      valuePropName=\"checked\"\n      wrapperCol={{\n        offset: 0,\n        span: 16,\n      }}\n    >\n      <Checkbox>Remember me</Checkbox>\n    </Form.Item>\n\n    <Form.Item\n      wrapperCol={{\n        offset: 0,\n        span: 16,\n      }}\n    >\n      <Button type=\"submit\" variant='success' htmlType=\"submit\">\n        Register\n      </Button>\n    </Form.Item>\n  </Form> */}\n\n        </Col>\n      </Row>\n      </> : (<ProfileScreen/>)}\n    \n      \n    </Container>\n  )\n}\n\nexport default LoginScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/my-account?redirect=${redirect}` : '/my-account'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/my-account/'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>County</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter County'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress.address) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n      dispatch({ type: USER_DETAILS_RESET })\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x Ksh.{item.price} = Ksh.{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>Ksh.{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>Ksh.{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>Ksh.{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>Ksh.{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/my-account')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('https://bobliquorstoreapi.onrender.com/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x Ksh.{item.price} = Ksh.{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>Ksh.{order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>Ksh.{order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>Ksh.{order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>Ksh.{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/my-account')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/my-account')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>Ksh.{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { listCategories } from '../actions/categoryActions'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { categories } = categoryList\n\n  \n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n        dispatch(listCategories())\n        } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('https://bobliquorstoreapi.onrender.com/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n              as=\"select\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            >\n              <option>Select Category</option>\n              {categories &&\n                categories.map((i, index) => (\n                  <option key={i._id} value={i._id}>\n                    {i.name}\n                  </option>\n                ))}\n            </Form.Control>\n\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/my-account/')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>Ksh.{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { CATEGORY_CREATE_RESET } from '../constants/categoryConstants'\nimport { createCategory, deleteCategory, listCategories } from '../actions/categoryActions'\n\n\nconst CategoryListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { loading, error, categories, page, pages } = categoryList\n\n  const categoryDelete = useSelector((state) => state.categoryDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = categoryDelete\n\n  const categoryCreate = useSelector((state) => state.categoryCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    category: createdCategory,\n  } = categoryCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: CATEGORY_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/my-account/')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/category/${createdCategory._id}/edit`)\n    } else {\n      dispatch(listCategories('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdCategory,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteCategory(id))\n    }\n  }\n\n  const createCategoryHandler = () => {\n    dispatch(createCategory())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Categories</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createCategoryHandler}>\n            <i className='fas fa-plus'></i> Create Category\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n               \n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {categories.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                 \n                  <td>\n                    <LinkContainer to={`/admin/category/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default CategoryListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { CATEGORY_UPDATE_RESET } from '../constants/categoryConstants'\nimport { getCategoryDetails, updateCategory } from '../actions/categoryActions'\n\nconst CategoryEditScreen = ({ match, history }) => {\n  const categoryId = match.params.id\n\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [image,setImage] = useState('');\n\n  const dispatch = useDispatch()\n\n  const categoryDetails = useSelector((state) => state.categoryDetails)\n  const { loading, error, category } = categoryDetails\n\n  const categoryUpdate = useSelector((state) => state.categoryUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = categoryUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: CATEGORY_UPDATE_RESET })\n      history.push('/admin/categorylist')\n    } else {\n      if (!category.name || category._id !== categoryId) {\n        dispatch(getCategoryDetails(categoryId))\n      } else {\n        setName(category.name)\n        setDescription(category.description)\n        setImage(category.image)\n      }\n    }\n  }, [dispatch, history, categoryId, category, successUpdate])\n\n  \n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateCategory({\n        _id: categoryId,\n        name,\n        description,\n        image\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/categorylist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Category</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Image URL'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default CategoryEditScreen\n","import React, { useEffect } from 'react'\nimport { Card, Col, Container, Form, ListGroup, Row } from 'react-bootstrap'\nimport { listProducts } from '../actions/productActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Product from '../components/Product'\n\nconst CategoryProductsScreen = ({ match }) => {\n    const categoryId = match.params.id\n    const dispatch = useDispatch()\n    \n    const productList = useSelector((state) => state.productList)\n    const { loading, error, products, page, pages } = productList\n  \n    useEffect(() => {\n        dispatch(listProducts())\n      }, [dispatch])\n    return(\n    <Container>\n    <Row>\n        <Col md={2}>\n        <Form className=\"facetwp-sort\">\n  <Form.Control as=\"select\" className=\"facetwp-sort-select\">\n    <option value=\"default\">Sort by</option>\n    <option value=\"title_asc\">Title (A-Z)</option>\n    <option value=\"title_desc\">Title (Z-A)</option>\n    <option value=\"date_desc\">Date (Newest)</option>\n    <option value=\"price_asc\">Price: Low to High</option>\n    <option value=\"price_desc\">Price: High to Low</option>\n  </Form.Control>\n</Form>\n\n\n<div id=\"text-25\" className=\"facet-wrap widget widget_text\">\n  <div className=\"gamma widget-title\">Categories</div>\n  <div className=\"textwidget\">\n    <div className=\"facetwp-facet facetwp-facet-categories facetwp-type-checkboxes\" data-name=\"categories\" data-type=\"checkboxes\">\n      <div className=\"facetwp-checkbox\" data-value=\"red-wine\">\n        <input type=\"checkbox\" />\n        <label>Red Wine <span className=\"facetwp-counter\">(94)</span></label>\n      </div>\n      <div className=\"facetwp-checkbox\" data-value=\"white-wine\">\n        <input type=\"checkbox\" />\n        <label>White Wine <span className=\"facetwp-counter\">(77)</span></label>\n      </div>\n      <div className=\"facetwp-checkbox\" data-value=\"red-sweet-wine\">\n        <input type=\"checkbox\" />\n        <label>Red Sweet Wine <span className=\"facetwp-counter\">(31)</span></label>\n      </div>\n      <div className=\"facetwp-checkbox\" data-value=\"sparkling-wine\">\n        <input type=\"checkbox\" />\n        <label>Sparkling Wine <span className=\"facetwp-counter\">(29)</span></label>\n      </div>\n      <div className=\"facetwp-checkbox\" data-value=\"rose-wine\">\n        <input type=\"checkbox\" />\n        <label>Rosé Wine <span className=\"facetwp-counter\">(21)</span></label>\n      </div>\n      <div className=\"facetwp-overflow facetwp-hidden\">\n        <div className=\"facetwp-checkbox\" data-value=\"sweet-white-wine\">\n          <input type=\"checkbox\" />\n          <label>Sweet White Wine <span className=\"facetwp-counter\">(15)</span></label>\n        </div>\n        <div className=\"facetwp-checkbox\" data-value=\"non-alcoholic-sparkling\">\n          <input type=\"checkbox\" />\n          <label>Non-Alcoholic Sparkling <span className=\"facetwp-counter\">(9)</span></label>\n        </div>\n        <div className=\"facetwp-checkbox\" data-value=\"champagne\">\n          <input type=\"checkbox\" />\n          <label>Champagne <span className=\"facetwp-counter\">(6)</span></label>\n        </div>\n        <div className=\"facetwp-checkbox\" data-value=\"flavoured-wine\">\n          <input type=\"checkbox\" />\n          <label>Flavoured Wine <span className=\"facetwp-counter\">(4)</span></label>\n        </div>\n        <div className=\"facetwp-checkbox\" data-value=\"prosecco\">\n          <input type=\"checkbox\" />\n          <label>Prosecco <span className=\"facetwp-counter\">(3)</span></label>\n        </div>\n      </div>\n      <a className=\"facetwp-toggle\">See 5 more</a>\n      <a className=\"facetwp-toggle facetwp-hidden\">See less</a>\n    </div>\n  </div>\n</div>\n\n\n\n        </Col>\n\n        <Col md={10}>\n        <Row>\n        {products\n  .filter((product) => product.category === categoryId) // Filter products by category\n  .map((product) => (\n    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n      <Product product={product} />\n    </Col>\n  ))}\n\n          </Row>\n\n        </Col>\n    </Row>\n    </Container>\n)\n}\n\nexport default CategoryProductsScreen","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Container, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport { addToCart } from '../actions/cartActions'\n\nconst WishlistScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n\n  const wish = useSelector((state) => state.wish)\n  const { wishItems } = wish\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    // if (!userInfo || !userInfo.isAdmin) {\n    //   history.push('/my-account')\n    // }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  const addToCartHandler = (product) => {\n    const productId = product._id\n    dispatch(addToCart(productId, 1))\n  };\n\n  return (\n    <Container>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>My Wishlist</h1>\n        </Col>\n        {/* <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col> */}\n      </Row>\n      <>\n      {wishItems.length === 0 ? (\n        <Message>\n          Your Wishlist is empty \n        </Message>\n      ) : (\n        <Container>\n          <Table responsive className='table-sm'>\n            <thead>\n                <tr>\n                   <th>Product</th>\n                   <th>Price</th>\n                   <th>Stock Status</th> \n                </tr>\n            </thead>\n            <tbody>\n              {wishItems.map((item) => (\n                <tr key={item.product}>\n                  <td>\n                  <img src={item.image} width={100} />\n                  {item.name}\n                  </td>\n                 <td>\n                    {item.price}\n                 </td>\n                 <td>\n                    <b className='text-success'>In stock</b>\n                 </td>\n                 <td>\n                    <Button type=\"button\" variant=\"success\" onClick={(e)=>addToCartHandler(item)}>Add To Cart</Button>\n                 </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          \n    </Container>\n  )\n}\n</>\n</Container>\n  )}\n\nexport default WishlistScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst BasketScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/my-account/?redirect=shipping')\n  }\n\n  return (\n    <Container>\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>Ksh.{item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              Ksh.\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n    </Container>\n  )\n}\n\nexport default BasketScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport CategoryListScreen from './screens/CategoryListScreen'\nimport CategoryEditScreen from './screens/CategoryEditScreen'\nimport { useSelector } from 'react-redux'\nimport CategoryProductsScreen from './screens/CategoryProductsScreen'\nimport WishlistScreen from './screens/WishlistScreen'\nimport BasketScreen from './screens/BasketScreen'\nimport OrdersScreen from './screens/OrdersScreen'\n\nconst App = () => {\n  const categoryList = useSelector((state) => state.categoryList)\n  const { categories } = categoryList\n  return (\n    <Router>\n      <Header  categories={categories}/>\n      <main>\n      <Route path='/category/:id' component={CategoryProductsScreen} />\n      {/* <Route path='/my-account/orders' component={OrdersScreen} /> */}\n      \n      \n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/my-account' component={LoginScreen} />\n          <Route path='/wishlist' component={WishlistScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/basket/:id?' component={BasketScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n\n          \n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n\n<Route\n            path='/admin/categorylist'\n            component={CategoryListScreen}\n            exact\n          />\n          \n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/category/:id/edit' component={CategoryEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n       \n\n       \n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}