{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","reducers/categoryReducers.js","constants/categoryConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/Meta.js","actions/categoryActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","screens/CategoryListScreen.js","screens/CategoryEditScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","categoryList","categories","categoryDetails","category","categoryCreate","categoryUpdate","categoryDelete","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Search","Input","SearchBox","history","useState","keyword","setKeyword","Form","placeholder","size","onChange","e","target","value","onSearch","trim","push","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","className","Link","NavDropdown","title","name","Item","onClick","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","key","active","listProducts","pageNumber","listProductDetails","Meta","description","keywords","Helmet","content","listCategories","HomeScreen","match","params","useEffect","sm","md","lg","xl","i","index","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","Image","alt","fluid","ListGroup","countInStock","Control","Button","disabled","length","review","createdAt","substring","onSubmit","productId","preventDefault","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","CategoryListScreen","createdCategory","deleteCategory","categoryData","CategoryEditScreen","categoryId","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2118663e.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nimport {\n  categoryListReducer,\n  categoryDetailsReducer,\n  categoryCreateReducer,\n  categoryUpdateReducer,\n  categoryDeleteReducer,\n} from './reducers/categoryReducers';\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  \n  categoryList: categoryListReducer,\n  categoryDetails: categoryDetailsReducer,\n  categoryCreate: categoryCreateReducer,\n  categoryUpdate: categoryUpdateReducer,\n  categoryDelete: categoryDeleteReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import {\n    CATEGORY_LIST_REQUEST,\n    CATEGORY_LIST_SUCCESS,\n    CATEGORY_LIST_FAIL,\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n    CATEGORY_CREATE_RESET,\n    CATEGORY_UPDATE_REQUEST,\n    CATEGORY_UPDATE_SUCCESS,\n    CATEGORY_UPDATE_FAIL,\n    CATEGORY_UPDATE_RESET,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n  } from '../constants/categoryConstants';\n  \n  export const categoryListReducer = (state = { categories: [] }, action) => {\n    switch (action.type) {\n      case CATEGORY_LIST_REQUEST:\n        return { loading: true, categories: [] };\n      case CATEGORY_LIST_SUCCESS:\n        return { loading: false, categories: action.payload };\n      case CATEGORY_LIST_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryDetailsReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n      case CATEGORY_DETAILS_REQUEST:\n        return { loading: true, ...state };\n      case CATEGORY_DETAILS_SUCCESS:\n        return { loading: false, category: action.payload };\n      case CATEGORY_DETAILS_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n      case CATEGORY_CREATE_REQUEST:\n        return { loading: true };\n      case CATEGORY_CREATE_SUCCESS:\n        return { loading: false, success: true, category: action.payload };\n      case CATEGORY_CREATE_FAIL:\n        return { loading: false, error: action.payload };\n      case CATEGORY_CREATE_RESET:\n        return {};\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryUpdateReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n      case CATEGORY_UPDATE_REQUEST:\n        return { loading: true };\n      case CATEGORY_UPDATE_SUCCESS:\n        return { loading: false, success: true, category: action.payload };\n      case CATEGORY_UPDATE_FAIL:\n        return { loading: false, error: action.payload };\n      case CATEGORY_UPDATE_RESET:\n        return { category: {} };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n      case CATEGORY_DELETE_REQUEST:\n        return { loading: true };\n      case CATEGORY_DELETE_SUCCESS:\n        return { loading: false, success: true };\n      case CATEGORY_DELETE_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  ","export const CATEGORY_LIST_REQUEST = 'CATEGORY_LIST_REQUEST';\nexport const CATEGORY_LIST_SUCCESS = 'CATEGORY_LIST_SUCCESS';\nexport const CATEGORY_LIST_FAIL = 'CATEGORY_LIST_FAIL';\n\nexport const CATEGORY_DETAILS_REQUEST = 'CATEGORY_DETAILS_REQUEST';\nexport const CATEGORY_DETAILS_SUCCESS = 'CATEGORY_DETAILS_SUCCESS';\nexport const CATEGORY_DETAILS_FAIL = 'CATEGORY_DETAILS_FAIL';\n\nexport const CATEGORY_CREATE_REQUEST = 'CATEGORY_CREATE_REQUEST';\nexport const CATEGORY_CREATE_SUCCESS = 'CATEGORY_CREATE_SUCCESS';\nexport const CATEGORY_CREATE_FAIL = 'CATEGORY_CREATE_FAIL';\nexport const CATEGORY_CREATE_RESET = 'CATEGORY_CREATE_RESET';\n\nexport const CATEGORY_UPDATE_REQUEST = 'CATEGORY_UPDATE_REQUEST';\nexport const CATEGORY_UPDATE_SUCCESS = 'CATEGORY_UPDATE_SUCCESS';\nexport const CATEGORY_UPDATE_FAIL = 'CATEGORY_UPDATE_FAIL';\nexport const CATEGORY_UPDATE_RESET = 'CATEGORY_UPDATE_RESET';\n\nexport const CATEGORY_DELETE_REQUEST = 'CATEGORY_DELETE_REQUEST';\nexport const CATEGORY_DELETE_SUCCESS = 'CATEGORY_DELETE_SUCCESS';\nexport const CATEGORY_DELETE_FAIL = 'CATEGORY_DELETE_FAIL';\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { Input } from 'antd';\n\n\nconst { Search } = Input;\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = () => {\n    \n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n  <Form>\n\n<Search\n      placeholder=\"Input Product Here\"\n      \n      size=\"large\"\n      onChange={(e) => setKeyword(e.target.value)}\n      \n      onSearch={(e)=>submitHandler(e)}\n    />\n\n</Form>\n    \n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      'https://bobliquorstoreapi.onrender.com/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      'https://bobliquorstoreapi.onrender.com/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`https://bobliquorstoreapi.onrender.com/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`https://bobliquorstoreapi.onrender.com/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>Bob Liquor Store</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) =>   <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n              <LinkContainer to='/cart'>\n                <Nav.Link>\n                  <i className='fas fa-shopping-cart'></i> Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <LinkContainer to='/profile'>\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/categorylist'>\n                    <NavDropdown.Item>Categories</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>Copyright &copy; Bob Liquor Store</Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>Ksh.{product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `https://bobliquorstoreapi.onrender.com/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://bobliquorstoreapi.onrender.com/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`https://bobliquorstoreapi.onrender.com/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Welcome To Bob Liquor Store',\n  description: 'We sell the best products for cheap',\n  keywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta\n","import axios from 'axios';\nimport {\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n  CATEGORY_LIST_FAIL,\n  CATEGORY_DETAILS_REQUEST,\n  CATEGORY_DETAILS_SUCCESS,\n  CATEGORY_DETAILS_FAIL,\n  CATEGORY_CREATE_REQUEST,\n  CATEGORY_CREATE_SUCCESS,\n  CATEGORY_CREATE_FAIL,\n  CATEGORY_CREATE_RESET,\n  CATEGORY_UPDATE_REQUEST,\n  CATEGORY_UPDATE_SUCCESS,\n  CATEGORY_UPDATE_FAIL,\n  CATEGORY_UPDATE_RESET,\n  CATEGORY_DELETE_REQUEST,\n  CATEGORY_DELETE_SUCCESS,\n  CATEGORY_DELETE_FAIL,\n} from '../constants/categoryConstants';\n\n// Action to fetch all categories\nexport const listCategories = () => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_LIST_REQUEST });\n\n    const { data } = await axios.get('https://bobliquorstoreapi.onrender.com/api/categories');\n\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to fetch category details\nexport const getCategoryDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/categories/${id}`);\n\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to create a new category\nexport const createCategory = (categoryData) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post('https://bobliquorstoreapi.onrender.com/api/categories', categoryData, config);\n\n    dispatch({\n      type: CATEGORY_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to update a category\nexport const updateCategory = (categoryData) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/categories/${categoryData._id}`,\n      categoryData,\n      config\n    );\n\n    dispatch({\n      type: CATEGORY_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to delete a category\nexport const deleteCategory = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/categories/${id}`, config);\n\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\nimport { Skeleton } from 'antd'\nimport { listCategories } from '../actions/categoryActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { categories } = categoryList\n\n  useEffect(() => {\n    dispatch(listCategories())\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        // <ProductCarousel />\n        <>\n        {loading ? (\n        <Skeleton active />):(\n          <img src=\"https://tpc.googlesyndication.com/simgad/6694094145406526054\" className='w-100' />\n        )\n        }\n        </>\n       \n      ) : (\n        <Link to='/' className='btn btn-light'>\n          Go Back\n        </Link>\n      )}\n      <>\n      {!keyword ? <h1>Latest Products</h1> : <h1>{keyword} Results</h1> }\n      </>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n{!keyword && categories && categories.map((i,index)=>(\n  <>\n  <h1>{i.name}(S)</h1>\n<>\n{products\n  .filter((product) => product.category === i._id)\n  .map((product) => (\n    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n      <Product product={product} />\n    </Col>\n  ))}\n\n</>\n</>\n)) }\n\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: Ksh.{product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>Ksh.{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>Ksh.{item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              Ksh.\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <Row>\n      <Col md={3}>\n        <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </Col>\n      <Col md={9}>\n        <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://bobliquorstoreapi.onrender.com/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>County</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter County'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress.address) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n      dispatch({ type: USER_DETAILS_RESET })\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x Ksh.{item.price} = Ksh.{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>Ksh.{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>Ksh.{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>Ksh.{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>Ksh.{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('https://bobliquorstoreapi.onrender.com/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x Ksh.{item.price} = Ksh.{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>Ksh.{order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>Ksh.{order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>Ksh.{order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>Ksh.{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>Ksh.{product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { listCategories } from '../actions/categoryActions'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { categories } = categoryList\n\n  \n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n        dispatch(listCategories())\n        } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('https://bobliquorstoreapi.onrender.com/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n              as=\"select\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            >\n              <option>Select Category</option>\n              {categories &&\n                categories.map((i, index) => (\n                  <option key={i._id} value={i._id}>\n                    {i.name}\n                  </option>\n                ))}\n            </Form.Control>\n\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>Ksh.{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { CATEGORY_CREATE_RESET } from '../constants/categoryConstants'\nimport { createCategory, deleteCategory, listCategories } from '../actions/categoryActions'\n\n\nconst CategoryListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { loading, error, categories, page, pages } = categoryList\n\n  const categoryDelete = useSelector((state) => state.categoryDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = categoryDelete\n\n  const categoryCreate = useSelector((state) => state.categoryCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    category: createdCategory,\n  } = categoryCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: CATEGORY_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/category/${createdCategory._id}/edit`)\n    } else {\n      dispatch(listCategories('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdCategory,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteCategory(id))\n    }\n  }\n\n  const createCategoryHandler = () => {\n    dispatch(createCategory())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Categories</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createCategoryHandler}>\n            <i className='fas fa-plus'></i> Create Category\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n               \n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {categories.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                 \n                  <td>\n                    <LinkContainer to={`/admin/category/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default CategoryListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { CATEGORY_UPDATE_RESET } from '../constants/categoryConstants'\nimport { getCategoryDetails, updateCategory } from '../actions/categoryActions'\n\nconst CategoryEditScreen = ({ match, history }) => {\n  const categoryId = match.params.id\n\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n\n  const dispatch = useDispatch()\n\n  const categoryDetails = useSelector((state) => state.categoryDetails)\n  const { loading, error, category } = categoryDetails\n\n  const categoryUpdate = useSelector((state) => state.categoryUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = categoryUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: CATEGORY_UPDATE_RESET })\n      history.push('/admin/categorylist')\n    } else {\n      if (!category.name || category._id !== categoryId) {\n        dispatch(getCategoryDetails(categoryId))\n      } else {\n        setName(category.name)\n        setDescription(category.description)\n      }\n    }\n  }, [dispatch, history, categoryId, category, successUpdate])\n\n  \n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateCategory({\n        _id: categoryId,\n        name,\n        description\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/categorylist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Category</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default CategoryEditScreen\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport CategoryListScreen from './screens/CategoryListScreen'\nimport CategoryEditScreen from './screens/CategoryEditScreen'\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n\n<Route\n            path='/admin/categorylist'\n            component={CategoryListScreen}\n            exact\n          />\n          \n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/category/:id/edit' component={CategoryEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}