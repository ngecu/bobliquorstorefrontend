{"version":3,"sources":["store.js","reducers/productReducers.js","constants/productConstants.js","reducers/cartReducers.js","constants/cartConstants.js","reducers/wishReducers.js","constants/wishContants.js","reducers/userReducers.js","constants/userConstants.js","reducers/orderReducers.js","constants/orderConstants.js","reducers/categoryReducers.js","constants/categoryConstants.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","components/Rating.js","actions/cartActions.js","components/Message.js","actions/wishActions.js","components/Product.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/Meta.js","actions/categoryActions.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/orderActions.js","screens/UserListScreen.js","screens/ProductListScreen.js","screens/CategoryListScreen.js","screens/OrderListScreen.js","components/FormContainer.js","screens/UserEditScreen.js","screens/WishlistScreen.js","screens/ProfileScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/ProductEditScreen.js","screens/CategoryEditScreen.js","screens/CategoryProductsScreen.js","screens/BasketScreen.js","screens/LostPasswordScreen.js","screens/NewPasswordScreen.js","screens/CheckoutScreen.js","App.js","serviceWorker.js","index.js"],"names":["reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","wish","wishItems","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","userResetPassword","userChangePassword","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","categoryList","categories","categoryDetails","category","categoryCreate","categoryUpdate","categoryDelete","cartItemsFromStorage","localStorage","getItem","JSON","parse","wishItemsFromStorage","userInfoFromStorage","initialState","wishlist","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Search","Input","SearchBox","history","useState","keyword","setKeyword","Form","className","placeholder","size","onChange","e","target","value","onSearch","trim","push","logout","dispatch","removeItem","document","location","href","register","name","email","password","a","config","headers","axios","post","data","setItem","stringify","response","message","resetPassword","getUserDetails","id","getState","Authorization","token","get","updateUserProfile","put","Header","useDispatch","useSelector","Navbar","bg","variant","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","data-count","length","class","Footer","Row","Col","xs","sm","md","lg","xl","Rating","text","color","style","defaultProps","addToCart","qty","key","content","_id","image","price","countInStock","duration","removeFromCart","Message","children","Alert","getUserWishes","Product","isHovered","setIsHovered","discountPercentage","setDiscountPercentage","newPrice","setNewPrice","useEffect","randomPercentage","Math","floor","random","calculateNewPrice","toFixed","open","setOpen","handleWishlistAdd","console","log","userId","productId","data2","Card","onMouseEnter","onMouseLeave","Img","src","alt","onClick","Body","Title","Text","as","rating","Button","showDrawer","title","percent","cartTotal","reduce","total","round","calculateProgress","showInfo","placement","onClose","visible","Table","responsive","Control","Number","Array","keys","ListGroup","Item","acc","Loader","Spinner","animation","role","width","height","margin","display","Paginate","isAdmin","Pagination","active","listProducts","pageNumber","listProductDetails","Meta","description","keywords","Helmet","listCategories","HomeScreen","match","params","overflowX","whiteSpace","scrollbarWidth","i","index","ProductScreen","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","Image","fluid","numReviews","disabled","review","createdAt","substring","onSubmit","preventDefault","Group","controlId","Label","row","listMyOrders","UserListScreen","successDelete","deleteHandler","window","confirm","delete","deleteUser","striped","bordered","hover","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","brand","CategoryListScreen","createdCategory","deleteCategory","categoryData","OrderListScreen","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","FormContainer","UserEditScreen","useParams","setName","setEmail","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","Check","label","checked","WishlistScreen","removeFromWish","ProfileScreen","setPassword","confirmPassword","setConfirmPassword","setMessage","useRouteMatch","useHistory","pathname","useLocation","loadingOrders","errorOrders","logoutHandler","LoginScreen","redirect","search","split","onFinishFailed","errorInfo","initialValues","remember","onFinish","values","login","layout","labelCol","span","wrapperCol","autoComplete","rules","required","Password","valuePropName","offset","htmlType","RegisterScreen","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","PaymentScreen","setPaymentMethod","PlaceOrderScreen","addDecimals","num","itemsPrice","shippingPrice","taxPrice","rounded","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","paypal","amount","onSuccess","paymentResult","payOrder","deliverOrder","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","CategoryEditScreen","categoryId","CategoryProductsScreen","data-name","data-type","data-value","BasketScreen","LostPasswordScreen","submitPasswordHandler","Email","NewPasswordScreen","confirmpassword","changePassword","CheckoutScreen","latitude","setLatitude","longitude","setLongitude","setError","isInsidePolygon","setIsInsidePolygon","getLocation","navigator","geolocation","getCurrentPosition","position","coords","isInside","insidePolygon","polygon","handleRetry","current","items","allowfullscreen","referrerpolicy","App","path","component","exact","Boolean","hostname","ReactDOM","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ff0066cc.chunk.js","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { wishReducer } from './reducers/wishReducers'\n\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n  userResetPasswordReducer,\n  userChangePasswordReducer\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nimport {\n  categoryListReducer,\n  categoryDetailsReducer,\n  categoryCreateReducer,\n  categoryUpdateReducer,\n  categoryDeleteReducer,\n} from './reducers/categoryReducers';\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  wish:wishReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  userResetPassword:userResetPasswordReducer,\n  userChangePassword:userChangePasswordReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  \n  categoryList: categoryListReducer,\n  categoryDetails: categoryDetailsReducer,\n  categoryCreate: categoryCreateReducer,\n  categoryUpdate: categoryUpdateReducer,\n  categoryDelete: categoryDeleteReducer,\n\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\n  const wishItemsFromStorage = localStorage.getItem('wishItems')\n  ? JSON.parse(localStorage.getItem('wishItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  wishlist:{\n    wishItems:wishItemsFromStorage\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","import {\n    WISH_ADD_ITEM,\n    WISH_REMOVE_ITEM,\n    WISH_CLEAR_ITEMS,\n    USER_WISHES_REQUEST,\n    USER_WISHES_SUCCESS,\n    USER_WISHES_FAIL,\n  } from '../constants/wishContants'\n  \n  export const wishReducer = (\n    state = { wishItems: [] },\n    action\n  ) => {\n    switch (action.type) {\n      case WISH_ADD_ITEM:\n        const item = action.payload\n  \n        const existItem = state.wishItems.find((x) => x.product === item.product)\n  \n        if (existItem) {\n          return {\n            ...state,\n            wishItems: state.wishItems.map((x) =>\n              x.product === existItem.product ? item : x\n            ),\n          }\n        } else {\n          return {\n            ...state,\n            wishItems: [...state.wishItems, item],\n          }\n        }\n      case WISH_REMOVE_ITEM:\n        return {\n          ...state,\n          wishItems: state.wishItems.filter((x) => x.product !== action.payload),\n        }\n     \n      case WISH_CLEAR_ITEMS:\n        return {\n          ...state,\n          wishItems: [],\n        }\n      case USER_WISHES_REQUEST:\n        return { loading: true }\n      case USER_WISHES_SUCCESS:\n        return { loading: false, wishItems: action.payload }\n        case USER_WISHES_FAIL:\n          return { loading: false, error: action.payload }\n    \n      default:\n        return state\n    }\n  }\n  ","\n\n\nexport const USER_WISHES_REQUEST = 'USER_WISHES_REQUEST'\nexport const USER_WISHES_SUCCESS = 'USER_WISHES_SUCCESS'\nexport const USER_WISHES_FAIL = 'USER_WISHES_FAIL'\nexport const USER_WISHES_RESET = 'USER_DETAILS_RESET'\n\nexport const WISH_ADD_ITEM = 'WISH_ADD_ITEM'\nexport const WISH_CLEAR_ITEMS = 'WISH_RESET'\nexport const WISH_REMOVE_ITEM = 'WISH_REMOVE_ITEM'","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n  USER_RESET_PASSWORD_REQUEST,\n  USER_RESET_PASSWORD_SUCCESS,\n  USER_RESET_PASSWORD_FAIL,\n  USER_CHANGE_PASSWORD_REQUEST,\n  USER_CHANGE_PASSWORD_SUCCESS,\n  USER_CHANGE_PASSWORD_FAIL\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const userResetPasswordReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_RESET_PASSWORD_REQUEST:\n      return { loading: true }\n    case USER_RESET_PASSWORD_SUCCESS:\n      return { loading: false, success: action.payload }\n    case USER_RESET_PASSWORD_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userChangePasswordReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_CHANGE_PASSWORD_REQUEST:\n      return { loading: true }\n    case USER_CHANGE_PASSWORD_SUCCESS:\n      return { loading: false, success: action.payload }\n    case USER_CHANGE_PASSWORD_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\nexport const USER_RESET_PASSWORD_REQUEST = 'USER_RESET_PASSWORD_REQUEST'\nexport const USER_RESET_PASSWORD_SUCCESS = 'USER_RESET_PASSWORD_SUCCESS'\nexport const USER_RESET_PASSWORD_FAIL = 'USER_RESET_PASSWORD_FAIL'\n\nexport const USER_CHANGE_PASSWORD_REQUEST = 'USER_CHANGE_PASSWORD_REQUEST'\nexport const USER_CHANGE_PASSWORD_SUCCESS = 'USER_CHANGE_PASSWORD_SUCCESS'\nexport const USER_CHANGE_PASSWORD_FAIL = 'USER_CHANGE_PASSWORD_FAIL'","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import {\n    CATEGORY_LIST_REQUEST,\n    CATEGORY_LIST_SUCCESS,\n    CATEGORY_LIST_FAIL,\n    CATEGORY_DETAILS_REQUEST,\n    CATEGORY_DETAILS_SUCCESS,\n    CATEGORY_DETAILS_FAIL,\n    CATEGORY_CREATE_REQUEST,\n    CATEGORY_CREATE_SUCCESS,\n    CATEGORY_CREATE_FAIL,\n    CATEGORY_CREATE_RESET,\n    CATEGORY_UPDATE_REQUEST,\n    CATEGORY_UPDATE_SUCCESS,\n    CATEGORY_UPDATE_FAIL,\n    CATEGORY_UPDATE_RESET,\n    CATEGORY_DELETE_REQUEST,\n    CATEGORY_DELETE_SUCCESS,\n    CATEGORY_DELETE_FAIL,\n  } from '../constants/categoryConstants';\n  \n  export const categoryListReducer = (state = { categories: [] }, action) => {\n    switch (action.type) {\n      case CATEGORY_LIST_REQUEST:\n        return { loading: true, categories: [] };\n      case CATEGORY_LIST_SUCCESS:\n        return { loading: false, categories: action.payload };\n      case CATEGORY_LIST_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryDetailsReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n      case CATEGORY_DETAILS_REQUEST:\n        return { loading: true, ...state };\n      case CATEGORY_DETAILS_SUCCESS:\n        return { loading: false, category: action.payload };\n      case CATEGORY_DETAILS_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n      case CATEGORY_CREATE_REQUEST:\n        return { loading: true };\n      case CATEGORY_CREATE_SUCCESS:\n        return { loading: false, success: true, category: action.payload };\n      case CATEGORY_CREATE_FAIL:\n        return { loading: false, error: action.payload };\n      case CATEGORY_CREATE_RESET:\n        return {};\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryUpdateReducer = (state = { category: {} }, action) => {\n    switch (action.type) {\n      case CATEGORY_UPDATE_REQUEST:\n        return { loading: true };\n      case CATEGORY_UPDATE_SUCCESS:\n        return { loading: false, success: true, category: action.payload };\n      case CATEGORY_UPDATE_FAIL:\n        return { loading: false, error: action.payload };\n      case CATEGORY_UPDATE_RESET:\n        return { category: {} };\n      default:\n        return state;\n    }\n  };\n  \n  export const categoryDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n      case CATEGORY_DELETE_REQUEST:\n        return { loading: true };\n      case CATEGORY_DELETE_SUCCESS:\n        return { loading: false, success: true };\n      case CATEGORY_DELETE_FAIL:\n        return { loading: false, error: action.payload };\n      default:\n        return state;\n    }\n  };\n  ","export const CATEGORY_LIST_REQUEST = 'CATEGORY_LIST_REQUEST';\nexport const CATEGORY_LIST_SUCCESS = 'CATEGORY_LIST_SUCCESS';\nexport const CATEGORY_LIST_FAIL = 'CATEGORY_LIST_FAIL';\n\nexport const CATEGORY_DETAILS_REQUEST = 'CATEGORY_DETAILS_REQUEST';\nexport const CATEGORY_DETAILS_SUCCESS = 'CATEGORY_DETAILS_SUCCESS';\nexport const CATEGORY_DETAILS_FAIL = 'CATEGORY_DETAILS_FAIL';\n\nexport const CATEGORY_CREATE_REQUEST = 'CATEGORY_CREATE_REQUEST';\nexport const CATEGORY_CREATE_SUCCESS = 'CATEGORY_CREATE_SUCCESS';\nexport const CATEGORY_CREATE_FAIL = 'CATEGORY_CREATE_FAIL';\nexport const CATEGORY_CREATE_RESET = 'CATEGORY_CREATE_RESET';\n\nexport const CATEGORY_UPDATE_REQUEST = 'CATEGORY_UPDATE_REQUEST';\nexport const CATEGORY_UPDATE_SUCCESS = 'CATEGORY_UPDATE_SUCCESS';\nexport const CATEGORY_UPDATE_FAIL = 'CATEGORY_UPDATE_FAIL';\nexport const CATEGORY_UPDATE_RESET = 'CATEGORY_UPDATE_RESET';\n\nexport const CATEGORY_DELETE_REQUEST = 'CATEGORY_DELETE_REQUEST';\nexport const CATEGORY_DELETE_SUCCESS = 'CATEGORY_DELETE_SUCCESS';\nexport const CATEGORY_DELETE_FAIL = 'CATEGORY_DELETE_FAIL';\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { Input } from 'antd';\n\n\nconst { Search } = Input;\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = () => {\n    \n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n  <Form className='w-100'>\n\n<Search\n      placeholder=\"Search Products\"\n      \n      size=\"large\"\n      onChange={(e) => setKeyword(e.target.value)}\n      \n      onSearch={(e)=>submitHandler(e)}\n    />\n\n</Form>\n    \n  )\n}\n\nexport default SearchBox\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n  USER_RESET_PASSWORD_REQUEST,\n  USER_RESET_PASSWORD_SUCCESS,\n  USER_RESET_PASSWORD_FAIL,\n\n  USER_CHANGE_PASSWORD_REQUEST,\n  USER_CHANGE_PASSWORD_SUCCESS,\n  USER_CHANGE_PASSWORD_FAIL\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      'https://bobliquorstoreapi.onrender.com/api/users/login',\n      { email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/my-account/'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      'https://bobliquorstoreapi.onrender.com/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const resetPassword = (email) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_RESET_PASSWORD_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      'https://bobliquorstoreapi.onrender.com/api/users/reset-password',\n      { email},\n      config\n    )\n\n\n    dispatch({\n      type: USER_RESET_PASSWORD_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: USER_RESET_PASSWORD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const changePassword = (id,token,password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_CHANGE_PASSWORD_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      `https://bobliquorstoreapi.onrender.com/api/users/change-password/${id}/${token}`,\n      { password},\n      config\n    )\n\n\n    dispatch({\n      type: USER_CHANGE_PASSWORD_SUCCESS,\n      payload: data,\n    })\n\n  } catch (error) {\n    dispatch({\n      type: USER_CHANGE_PASSWORD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`https://bobliquorstoreapi.onrender.com/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`https://bobliquorstoreapi.onrender.com/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown, Row, Col, Dropdown } from 'react-bootstrap'\nimport SearchBox from './SearchBox'\nimport { logout } from '../actions/userActions'\nimport { Home, Favorite, AccountCircle, ShoppingCart } from '@material-ui/icons';\nconst Header = ({categories}) => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  return (\n    <>\n    <header>\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand>\n              {/* <img src=\"https://www.oaks.delivery/wp-content/uploads/onc-logo-svg-header.svg\"/> */}\n            Drink&Chill</Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Route render={({ history }) =>   <SearchBox history={history} />} />\n            <Nav className='ml-auto'>\n           \n              <LinkContainer to='/my-account/cgkit-wishlist/'>\n                  <Nav.Link>\n                  <div className=\"icon-text-wrapper\">\n        <i className=\"fas fa-heart\"></i>\n        <span>Wishlist</span>\n      </div>\n                  </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                    <LinkContainer to='/my-account/'>\n                    <Nav.Link>\n                    <div className=\"icon-text-wrapper\">\n                      <i className='fas fa-user'></i> \n                      <span>Account</span>\n                    </div>\n                    </Nav.Link>\n                  </LinkContainer>\n                // <NavDropdown title={userInfo.name} id='username'>\n                //   <LinkContainer to='/profile'>\n                //     <NavDropdown.Item>Profile</NavDropdown.Item>\n                //   </LinkContainer>\n                //   <NavDropdown.Item onClick={logoutHandler}>\n                //     Logout\n                //   </NavDropdown.Item>\n                // </NavDropdown>\n              ) : (\n                <LinkContainer to='/my-account/'>\n                  <Nav.Link>\n                  <div className=\"icon-text-wrapper\">\n                    <i className='fas fa-user'></i> \n                    <span>Account</span>\n                  </div>\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {/* {userInfo && userInfo.isAdmin && (\n                  //   <LinkContainer to='/my-account'>\n                  //   <Nav.Link>\n                  //   <div className=\"icon-text-wrapper\">\n                  //     <i className='fas fa-user'></i> \n                  //     <span>Account</span>\n                  //   </div>\n                  //   </Nav.Link>\n                  // </LinkContainer>\n\n                <NavDropdown title={ <div className=\"icon-text-wrapper\">\n                <i className='fas fa-user'></i> \n                <span>Admin</span>\n              </div>} id='adminmenu'>\n                  <LinkContainer to='/admin/userlist'>\n                    <NavDropdown.Item>Users</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/categorylist'>\n                    <NavDropdown.Item>Categories</NavDropdown.Item>\n                  </LinkContainer>\n                  <LinkContainer to='/admin/orderlist'>\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )} */}\n<LinkContainer to='/basket'>\n        <Nav.Link>\n          <div className=\"basket-icon-wrapper icon-text-wrapper\" data-count={cartItems.length}>\n            <i className='fas fa-shopping-cart'></i>\n            <span>basket</span>\n          </div>\n          {cartItems.length > 0 && (\n            <div className=\"cart-items\">{cartItems.length}</div>\n          )}\n        </Nav.Link>\n      </LinkContainer>\n\n              <LinkContainer to='/checkout'>\n                <Nav.Link>\n\n                  <div className=\"icon-text-wrapper\">\n                  <i class=\"fas fa-arrow-right\"></i>\n                    {/* <i className='fas fa-shopping-cart'></i> */}\n                    <span>checkout</span>\n                  </div>\n\n                </Nav.Link>\n              </LinkContainer>\n\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n\n    {/* <Row>\n      <Container>\n        <div className='d-flex'>\n          <div className='w-50 d-flex'>\n          \n          {categories && categories.map((category)=>(\n              <div className='mx-2'>\n            <Dropdown>\n            <Dropdown.Toggle id=\"dropdown-basic\">\n          \n           {category.name}\n           \n           </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n          <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n          <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n          </Dropdown.Menu>\n          </Dropdown>\n          </div>\n          ))}\n         \n          \n          </div>\n          <div className='w-50'>\n          <Nav.Link className=\"position-relative\">\n  <i className=\"fas fa-shopping-cart\"></i>\n  {cartItemsCount > 0 && (\n    <span className=\"cart-items-count\">{cartItemsCount}</span>\n  )}\n</Nav.Link>\n          </div>\n        </div>\n       \n      </Container>\n      </Row> */}\n    </>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min'\n\nconst Footer = () => {\n  return (\n    <>\n<section className=\"\">\n  <Container className=\"text-center text-md-start mt-5\">\n    <Row>\n      <Col xs={12} sm={3} md={3} lg={3} xl={3} className=\"text-left\">\n        <div id=\"custom_html-10\" className=\"widget_text widget widget_custom_html\">\n          <b className=\"gamma widget-title\">Over 1300 drinks available</b>\n          <div className=\"textwidget custom-html-widget\">\n            <p>Drinks &amp; Chills has a wide selection of wines, gins, vodkas, rums, tequila, liqueurs, and other drinks to choose from.</p>\n          </div>\n        </div>\n      </Col>\n\n      <Col xs={12} sm={3} md={3} lg={3} xl={3} className=\"text-left\">\n        <div id=\"custom_html-8\" className=\"widget_text widget widget_custom_html\">\n          <span className=\"gamma widget-title\">24/7 Express Delivery</span>\n          <div className=\"textwidget custom-html-widget\">\n            <p>We deliver any time, any day, in <strong>less than 1 hour</strong> - average: 23 min. We also offer next-day countrywide alcohol delivery in Kenya.</p>\n          </div>\n        </div>\n      </Col>\n    \n      <Col xs={12} sm={3} md={3} lg={3} xl={3} className=\"text-left\">\n        <div id=\"custom_html-9\" className=\"widget_text widget widget_custom_html\">\n          <span className=\"gamma widget-title\">Free pick up</span>\n          <div className=\"textwidget custom-html-widget\">\n            <p>At any of our store locations.</p>\n          </div>\n        </div>\n      </Col>\n\n      <Col xs={12} sm={3} md={3} lg={3} xl={3} className=\"text-left\">\n        <div id=\"custom_html-11\" className=\"widget_text widget widget_custom_html\">\n          <span className=\"gamma widget-title\">100% Secure Checkout</span>\n          <div className=\"textwidget custom-html-widget\">\n            <p>Pay online with M-Pesa Express, Online VISA (3D Secure), PayPal and BitPay. We also accept Cash and PDQ (card payment) on delivery.</p>\n          </div>\n        </div>\n      </Col>\n    </Row>\n  </Container>\n</section>\n\n\n      <footer className=\"text-center text-lg-start   text-light\">\n      {/* Section: Social media */}\n     \n      {/* Section: Social media */}\n\n      {/* Section: Links */}\n      <section className=\"\">\n        <Container className=\"text-center text-md-start mt-5\">\n          {/* Grid row */}\n          <Row className=\"mt-3\">\n            {/* Grid column */}\n            <Col md=\"3\" lg=\"4\" xl=\"3\" className=\"mx-auto mb-4\">\n              {/* Content */}\n              <p className=\"text-uppercase fw-bold mb-4\">\n               About Drinks & Chill\n              </p>\n              \n            </Col>\n            {/* Grid column */}\n\n            {/* Grid column */}\n            <Col md=\"2\" lg=\"2\" xl=\"2\" className=\"mx-auto mb-4\">\n              {/* Links */}\n              <p className=\"text-uppercase fw-bold mb-4\">\n                Liquor Store near me\n              </p>\n              \n            </Col>\n            {/* Grid column */}\n\n            {/* Grid column */}\n            <Col md=\"3\" lg=\"2\" xl=\"2\" className=\"mx-auto mb-4\">\n              {/* Links */}\n              <p className=\"text-uppercase fw-bold mb-4\">\n                Recent Posts\n              </p>\n             \n            </Col>\n            {/* Grid column */}\n\n            {/* Grid column */}\n            <Col md=\"4\" lg=\"3\" xl=\"3\" className=\"mx-auto mb-md-0 mb-4\">\n              {/* Links */}\n              <p className=\"text-uppercase fw-bold mb-4\">Recent Product Reviews</p>\n             \n            </Col>\n            {/* Grid column */}\n          </Row>\n          {/* Grid row */}\n        </Container>\n      </section>\n      {/* Section: Links */}\n\n      {/* Copyright */}\n      {/* <div className=\"text-center p-4\" style={{ backgroundColor: 'rgba(0, 0, 0, 0.05)' }}>\n       \n        <a className=\"text-reset fw-bold\" href=\"\">DevNgecu</a> © 2023\n      </div> */}\n      <Row>\n        <Col md={6} className='py-2'>\n        © Drink & Chill  2023\n        <br/>\n        Built with love by DevNgecu\n        </Col>\n        <Col md={6}>\n          <Link className=\"text-danger\" to=\"#\">\n          <i class=\"fas fa-phone\"></i> +254707583092\n          </Link>\n          <Link to=\"#\" className=\"text-secondary\">\n            | +254759594677\n          </Link>\n        </Col>\n      </Row>\n      {/* Copyright */}\n    </footer>\n\n    </>\n    \n  )\n}\n\nexport default Footer\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\nimport {  message } from 'antd';\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const key = 'updatable';\n  message.loading({ content: 'Loading...', key });\n\n  try{\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/${id}`)\n\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty,\n      },\n    })\n    message.success({ content: 'Item added to cart!', key, duration: 2 });\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n  }\n  catch(error){\n    message.error({ content: 'Error adding item to cart!', key, duration: 2 });\n  }\n  \n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  const key = 'updatable';\n  try {\n    \n    // Display success message\n    message.loading({ content: 'Removing item from cart...', key });\n\n    dispatch({\n      type: CART_REMOVE_ITEM,\n      payload: id,\n    });\n\n    // Update local storage\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n\n    // Display success message\n    message.success({ content: 'Item removed from cart!', key, duration: 2 });\n  } catch (error) {\n    // Display error message\n    message.error({ content: 'Error removing item from cart!', key, duration: 2 });\n  }\n};\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import axios from 'axios'\n\nimport { USER_WISHES_FAIL, USER_WISHES_REQUEST, USER_WISHES_SUCCESS, WISH_ADD_ITEM, WISH_REMOVE_ITEM } from '../constants/wishContants'\nimport { logout } from './userActions'\nimport { message } from 'antd';\n\nexport const getUserWishes = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_WISHES_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/users/userWishlist/${id}`, config)\n\n    dispatch({\n      type: USER_WISHES_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_WISHES_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\n\nexport const addToWish = (id, userId) => async (dispatch, getState) => {\n  try {\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/${id}`);\n\n    localStorage.setItem('wishItems', JSON.stringify(getState().wish.wishItems));\n\n    const { data: data2 } = await axios.post(`https://bobliquorstoreapi.onrender.com/api/users/addToWish/${userId}`, { productId: id });\n\n    dispatch({\n      type: WISH_ADD_ITEM,\n      payload: data2,\n    });\n\n    message.success('Product added to wishlist!');\n  } catch (error) {\n    console.error('Failed to add product to wishlist:', error.message);\n    message.error('Failed to add product to wishlist.');\n  }\n};\n\nexport const removeFromWish = (id, userId) => async (dispatch, getState) => {\n  try {\n    localStorage.setItem('wishItems', JSON.stringify(getState().wish.wishItems));\n\n    await axios.post(`https://bobliquorstoreapi.onrender.com/api/users/removeFromWish/${userId}`, { productId: id });\n\n    dispatch({\n      type: WISH_REMOVE_ITEM,\n      payload: id,\n    });\n\n    localStorage.setItem('wishItems', JSON.stringify(getState().wish.wishItems));\n\n    message.success('Product removed from wishlist!');\n  } catch (error) {\n    console.error('Failed to remove product from wishlist:', error.message);\n    message.error('Failed to remove product from wishlist.');\n  }\n};\n\n","import React, { useState, useEffect } from 'react';\nimport { Button, Card, Col, Form, Image, ListGroup, Row, Table } from 'react-bootstrap';\nimport Rating from './Rating'\nimport { Drawer, Progress } from 'antd';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from './Message';\nimport { Link } from 'react-router-dom/cjs/react-router-dom.min';\nimport { addToWish } from '../actions/wishActions';\n\nconst Product = ({ product }) => {\n  const [isHovered, setIsHovered] = useState(false);\n  const [discountPercentage, setDiscountPercentage] = useState(0);\n  const [newPrice, setNewPrice] = useState(product.price);\n  const dispatch = useDispatch()\n\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  useEffect(() => {\n    const randomPercentage = Math.floor(Math.random() * 11); // Generates a random integer between 0 and 10\n    setDiscountPercentage(randomPercentage);\n\n    const calculateNewPrice = product.price - (product.price * randomPercentage) / 100;\n    setNewPrice(calculateNewPrice.toFixed(2));\n  }, [product.price]);\n\n\n  const [open, setOpen] = useState(false);\n\n  const handleWishlistAdd = (product)=>{\n    console.log(\"prodcut addeing to wishlist\")\n    const productId = product._id\n    dispatch(addToWish(productId, userInfo._id))\n  }\n\n  const showDrawer = (product) => {\n    const productId = product._id\n    dispatch(addToCart(productId, 1))\n\n    setOpen(true);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    // navigate.push('/login?redirect=shipping')\n  }\n\n  const calculateProgress = () => {\n    const totalCash = 15000; // Set the total cash amount\n    const cartTotal = cartItems.reduce(\n      (total, item) => total + item.qty * item.price,\n      0\n    );\n    const progressPercentage = Math.round((cartTotal / totalCash) * 100);\n    return progressPercentage;\n  };\n\n  return (\n    <>\n     <Card\n      className={`product-card ${isHovered ? 'hovered' : ''}`}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className=\"product-image\">\n        <Card.Img variant=\"top\" src={product.image} alt={product.name} />\n        {isHovered && (\n          <div className=\"wishlist-icon\" onClick={(e)=>handleWishlistAdd(product)}>\n            <i className=\"fas fa-heart\"></i>\n          </div>\n        )}\n        {discountPercentage > 0 && (\n          <div className=\"discount-badge\">\n            <p>-{discountPercentage}%</p>\n          </div>\n        )}\n      </div>\n      <Card.Body>\n        <Card.Title><Link to={`product/${product._id}`}>{product.name}</Link></Card.Title>\n        <Card.Text className='my-0'>\n          {discountPercentage > 0 && (\n            <del>{product.price}/-</del>\n          )}\n          <ins>{newPrice}/-</ins>\n        </Card.Text>\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            // text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n        <Button variant=\"success\" onClick={()=>showDrawer(product)} className=\"w-100\">\n          Add to basket\n        </Button>\n      </Card.Body>\n    </Card>\n    <Drawer\n      title={\n        <>\n          <p>Basket</p>\n          <Progress percent={calculateProgress()} showInfo={false} />\n          <div className='text-center'>\n            <small>Get free delivery for orders over 15,000/-</small>\n          </div>\n        </>\n      }\n      placement=\"right\"\n      onClose={onClose}\n      visible={open}\n    >\n      {cartItems.length === 0 ? (\n        <Message>\n          Your cart is empty <Link to=\"/\">Go Back</Link>\n        </Message>\n      ) : (\n        <>\n          <Table responsive className='table-sm'>\n            <tbody>\n              {cartItems.map((item) => (\n                <tr key={item.product}>\n                  <td>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                  <td>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    <br />\n                    {item.price}/-\n                    <br />\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(addToCart(item.product, Number(e.target.value)))\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </td>\n                  <td>\n                    <img src={item.image} className='w-100' alt={item.name} />\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Card className='mt-auto'>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                  items\n                </h2>\n                Ksh.\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Link to=\"/basket\" className=\"btn btn-secondary btn-block w-100\">View Basket</Link>\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <Link to=\"/checkout\" className=\"btn btn-success btn-block w-100\">\n                  Proceed To Checkout\n                </Link>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n          <img src=\"https://www.oaks.delivery/wp-content/uploads/mini-cart-payment-methods-ke.png\" className='w-100' />\n        </>\n      )}\n    </Drawer>\n    </>\n   \n  );\n};\n\nexport default Product;\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `https://bobliquorstoreapi.onrender.com/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://bobliquorstoreapi.onrender.com/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`https://bobliquorstoreapi.onrender.com/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Drink&Chill',\n  description: 'We sell the best products for cheap',\n  keywords: 'electronics, buy electronics, cheap electroincs',\n}\n\nexport default Meta\n","import axios from 'axios';\nimport {\n  CATEGORY_LIST_REQUEST,\n  CATEGORY_LIST_SUCCESS,\n  CATEGORY_LIST_FAIL,\n  CATEGORY_DETAILS_REQUEST,\n  CATEGORY_DETAILS_SUCCESS,\n  CATEGORY_DETAILS_FAIL,\n  CATEGORY_CREATE_REQUEST,\n  CATEGORY_CREATE_SUCCESS,\n  CATEGORY_CREATE_FAIL,\n  CATEGORY_CREATE_RESET,\n  CATEGORY_UPDATE_REQUEST,\n  CATEGORY_UPDATE_SUCCESS,\n  CATEGORY_UPDATE_FAIL,\n  CATEGORY_UPDATE_RESET,\n  CATEGORY_DELETE_REQUEST,\n  CATEGORY_DELETE_SUCCESS,\n  CATEGORY_DELETE_FAIL,\n} from '../constants/categoryConstants';\n\n// Action to fetch all categories\nexport const listCategories = () => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_LIST_REQUEST });\n\n    const { data } = await axios.get('https://bobliquorstoreapi.onrender.com/api/categories');\n\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to fetch category details\nexport const getCategoryDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: CATEGORY_DETAILS_REQUEST });\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/categories/${id}`);\n\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to create a new category\nexport const createCategory = (categoryData) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_CREATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post('https://bobliquorstoreapi.onrender.com/api/categories', categoryData, config);\n\n    dispatch({\n      type: CATEGORY_CREATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_CREATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to update a category\nexport const updateCategory = (categoryData) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_UPDATE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/categories/${categoryData._id}`,\n      categoryData,\n      config\n    );\n\n    dispatch({\n      type: CATEGORY_UPDATE_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n// Action to delete a category\nexport const deleteCategory = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: CATEGORY_DELETE_REQUEST });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    await axios.delete(`https://bobliquorstoreapi.onrender.com/api/categories/${id}`, config);\n\n    dispatch({ type: CATEGORY_DELETE_SUCCESS });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Container, Card, CardDeck } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\nimport { Skeleton } from 'antd'\nimport { listCategories } from '../actions/categoryActions'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { categories } = categoryList\n\n  useEffect(() => {\n    dispatch(listCategories())\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        // <ProductCarousel />\n        <>\n        {loading ? (\n        <Skeleton active />):(\n          <img src=\"https://www.oaks.delivery/wp-content/uploads/banner-1.png\" className='w-100' />\n        )\n        }\n        </>\n       \n      ) : (\n        <Container>\n        <Link to='/' className='btn btn-primary'>\n          Go Back\n        </Link>\n        </Container>\n      )}\n      <Container>\n      <>\n\n      <Row className='my-2'>\n          {categories && categories.map((category)=>(\n            <Col key={category._id} xs={6} sm={6} md={3} lg={3} xl={3}>\n                <Link to={`/category/${category._id}`}>\n                <Card>\n                \n                  <Card.Img src={category.image} variant='top' />\n               \n\n                  <Card.Body className='text-center p-0'>\n       \n          <Card.Title as='div'>\n            <strong>{category.name}</strong>\n          </Card.Title>\n\n      </Card.Body>\n\n                </Card>\n                </Link>\n            \n          </Col>\n          ))}\n\n        </Row>\n        \n      {!keyword ? <h6>New Arrivals</h6> : <h6>{keyword} Results</h6> }\n      </>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n       <div style={{ overflowX: 'auto', whiteSpace: 'nowrap', scrollbarWidth: 'none', '-ms-overflow-style': 'none' }}>\n  <style>\n    {`\n      div::-webkit-scrollbar {\n        width: 0.5em;\n        height: 0.5em;\n      }\n      div::-webkit-scrollbar-thumb {\n        background-color: rgba(0, 0, 0, 0.5);\n      }\n    `}\n  </style>\n  <Row className='flex-nowrap'>\n    {products.map((product) => (\n      <Col key={product._id} xs={6} sm={6} md={3} lg={3} xl={3} className='px-1'>\n        <Product product={product} />\n      </Col>\n    ))}\n  </Row>\n</div>\n        </>\n      )}\n\n\n{!keyword && categories && categories.map((i,index)=>(\n  <>\n  <h6>{i.name}(S)\n  \n  <Link\n                to={`/category/${i._id}`}\n                className=\"float-right\"\n              >\n                View All &rarr;\n              </Link>\n\n  </h6>\n  <div style={{ overflowX: 'auto', whiteSpace: 'nowrap', scrollbarWidth: 'none', '-ms-overflow-style': 'none' }}>\n  <style>\n    {`\n      div::-webkit-scrollbar {\n        width: 0.5em;\n        height: 0.5em;\n      }\n      div::-webkit-scrollbar-thumb {\n        background-color: rgba(0, 0, 0, 0.5);\n      }\n    `}\n  </style>\n  <Row>\n  {products\n    .filter((product) => product.category === i._id)\n    .map((product) => (\n      <Col key={product._id} xs={6} sm={6} md={3} lg={3} xl={3} className=\"h-100\">\n        <Product product={product} />\n      </Col>\n    ))}\n</Row>\n</div>\n</>\n)) }\n</Container>\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form, Container } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\nimport Product from '../components/Product'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <Container>\n      {/* <Link className='btn btn-primary my-3' to='/'>\n        Go Back\n      </Link> */}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={6}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: Ksh.{product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>Ksh.{product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n\n            </Col>\n            \n          </Row>\n          <Row>\n            <Col md={12}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/my-account/'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n\n          <Row className='flex-nowrap'>\n            You may also like...\n    {/* {products.map((product) => (\n      <Col key={product._id} xs={6} sm={6} md={3} lg={3} xl={3} className='px-1'>\n        <Product product={product} />\n      </Col>\n    ))} */}\n  </Row>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`https://bobliquorstoreapi.onrender.com/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `https://bobliquorstoreapi.onrender.com/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`https://bobliquorstoreapi.onrender.com/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/my-account')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/my-account/users/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default UserListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/my-account')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n               <th></th>\n                <th>NAME</th>\n                <th>PRICE</th>\n               \n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td><img src={product.image} width={40} /></td>\n                  <td>{product.name}</td>\n                  <td>Ksh.{product.price}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport { CATEGORY_CREATE_RESET } from '../constants/categoryConstants'\nimport { createCategory, deleteCategory, listCategories } from '../actions/categoryActions'\n\n\nconst CategoryListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { loading, error, categories, page, pages } = categoryList\n\n  const categoryDelete = useSelector((state) => state.categoryDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = categoryDelete\n\n  const categoryCreate = useSelector((state) => state.categoryCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    category: createdCategory,\n  } = categoryCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: CATEGORY_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/my-account/')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/category/${createdCategory._id}/edit`)\n    } else {\n      dispatch(listCategories('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdCategory,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteCategory(id))\n    }\n  }\n\n  const createCategoryHandler = () => {\n    dispatch(createCategory())\n  }\n\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Categories</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createCategoryHandler}>\n            <i className='fas fa-plus'></i> Create Category\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th></th>\n                <th>NAME</th>\n               \n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {categories.map((product) => (\n                <tr key={product._id}>\n                  <td><img src={product.image} width={40} /></td>\n                  <td>{product.name}</td>\n                 \n                  <td>\n                    <LinkContainer to={`/admin/category/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default CategoryListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/my-account/')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>Ksh.{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\nimport { useParams } from 'react-router-dom/cjs/react-router-dom.min'\n\nconst UserEditScreen = ({ match, history }) => {\n  const { id } = useParams();\n  console.log(id)\n  const userId = id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Container, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport { addToCart } from '../actions/cartActions'\nimport { getUserWishes, removeFromWish } from '../actions/wishActions'\n\nconst WishlistScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const wish = useSelector((state) => state.wish)\n  const { loading,error,wishItems } = wish\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    // dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo) {\n      history.push('/my-account/?error=please_login')\n    }\n    else{\n      dispatch(getUserWishes(userInfo._id, pageNumber))\n\n    }\n\n    \n  }, [\n    dispatch,\n    history,\n    userInfo,\n    // successDelete,\n    // successCreate,\n    // createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    console.log(id)\n    if (window.confirm('Are you sure')) {\n      dispatch(removeFromWish(id,userInfo._id))\n    }\n  }\n\n\n  return (\n    <Container>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>My Wishlist</h1>\n        </Col>\n        {/* <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col> */}\n      </Row>\n      <>\n      {wishItems?.length === 0 ? (\n        <Message>\n          Your Wishlist is empty \n        </Message>\n      ) : (\n        <Container>\n          <Table responsive className='table-sm'>\n            <thead>\n                <tr>\n                   <th>Product</th>\n                   <th>Price</th>\n                   <th>Stock Status</th> \n                </tr>\n            </thead>\n            <tbody>\n              {wishItems && wishItems.map((item) => (\n                <tr key={item.product}>\n                  <td>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(item._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                  <img src={item.image} width={100} />\n                  {item.name}\n                  </td>\n                 <td>\n                    {item.price}\n                 </td>\n                 <td>\n                    <b className='text-success'>In stock</b>\n                 </td>\n                 <td>\n                    <Button \n                    type=\"button\" \n                    variant=\"success\"\n                     onClick={(e)=>dispatch(addToCart(item._id, 1))} >\n                      Add To Cart\n                     </Button>\n                 </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          \n    </Container>\n  )\n}\n</>\n</Container>\n  )}\n\nexport default WishlistScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col, ListGroup } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, logout, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { Link,useLocation } from 'react-router-dom'\nimport { addToCart } from '../actions/cartActions'\nimport UserListScreen from './UserListScreen'\nimport ProductListScreen from './ProductListScreen'\nimport { useRouteMatch } from 'react-router-dom';\nimport CategoryListScreen from './CategoryListScreen'\nimport OrderListScreen from './OrderListScreen'\nimport UserEditScreen from './UserEditScreen'\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min'\nimport { getUserWishes } from '../actions/wishActions'\nimport WishlistScreen from './WishlistScreen'\nconst ProfileScreen = () => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  const location = useLocation();\n  const { pathname } = location;\n\n\n  console.log(pathname)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n  const wish = useSelector((state) => state.wish)\n  const { wishItems } = wish\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/my-account/')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n\n        if(pathname ==\"/my-account/cgkit-wishlist/\"){\n          console.log(\"you are in wishlist\")\n          dispatch(getUserWishes(userInfo._id))\n        }\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  const addToCartHandler = (product) => {\n    const productId = product._id\n    dispatch(addToCart(productId, 1))\n  };\n  \n  return (\n    <>\n    <h2>My Account</h2>\n    <Row>\n       \n      <Col md={3}>\n       \n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <>\n          <ListGroup>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--dashboard is-active\">\n            <Link to=\"/my-account/\">Dashboard</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--orders\">\n            <Link to=\"/my-account/orders/\">Orders</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--purchased-products\">\n            <Link to=\"/my-account/purchased-products/\">Purchased Products</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--edit-account\">\n            <Link to=\"/my-account/edit-account/\">Account details</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--cgkit-wishlist\">\n            <Link to=\"/my-account/cgkit-wishlist/\">My wishlist</Link>\n          </ListGroup.Item>\n          {/* <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--lws_woorewards\">\n            <Link to=\"/my-account/lws_woorewards/\">Loyalty and Rewards</Link>\n          </ListGroup.Item> */}\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--customer-logout\">\n            <Link onClick={logoutHandler}>Log out</Link>\n          </ListGroup.Item>\n        </ListGroup>\n          {userInfo.isAdmin && <>\n          <h2>Admin Panel</h2>\n          <ListGroup>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--dashboard is-active\">\n            <Link to=\"/my-account/users/\">Users</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--orders\">\n            <Link to=\"/my-account/products/\">Products</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--purchased-products\">\n            <Link to=\"/my-account/categories/\">Categories</Link>\n          </ListGroup.Item>\n          <ListGroup.Item className=\"woocommerce-MyAccount-navigation-link woocommerce-MyAccount-navigation-link--edit-account\">\n            <Link to=\"/my-account/orders/\">Orders</Link>\n          </ListGroup.Item>\n        </ListGroup>\n          </>}\n        </>\n        )}\n      </Col>\n      <Col md={9}>\n      {pathname === '/my-account/' && (\n        <>\n      Hello <b><strong>{user.email}</strong></b> (not {user.email} <Link onClick={logoutHandler}>Log out </Link>)\n\nFrom your account dashboard you can view your <Link to=\"/orders\">recent orders</Link>, manage your <Link to=\"edit-address\"> shipping and billing </Link> addresses, and <Link to=\"/edit-account\"> edit your password and account details.</Link>\n        {/* <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )} */}\n        </>)}\n\n        {pathname === '/my-account/orders/' && (\n        <>\n                  <h2>My Orders</h2>\n        {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ): orders.length === 0 ? (\n          <Message>\n            <p>No order has been made yet.</p>\n            <p>\n              <Link to=\"/\">Browse Products</Link>\n            </p>\n          </Message>)\n         : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='light'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n        </>\n      )}\n\n{pathname === '/my-account/purchased-products/' && (\n  <>\n    <h2>My Purchases</h2>\n    {loadingOrders ? (\n      <Loader />\n    ) : errorOrders ? (\n      <Message variant='danger'>{errorOrders}</Message>\n    ) : orders.length === 0 ? (\n      <Message>\n        <p>No order has been made yet.</p>\n        <p>\n          <Link to=\"/\">Browse Products</Link>\n        </p>\n      </Message>\n    ) : (\n      <Table striped bordered hover responsive className='table-sm'>\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>DATE</th>\n            <th>TOTAL</th>\n            <th>PAID</th>\n            <th>DELIVERED</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {orders\n            .filter((order) => order.isPaid) // Filter only the orders that have been paid\n            .map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>{order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button className='btn-sm' variant='light'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n        </tbody>\n      </Table>\n    )}\n  </>\n)}\n\n{pathname === '/my-account/edit-account/' && (\n        <>\n        {/* <h2>User Profile</h2> */}\n        {message && <Message variant='danger'>{message}</Message>}\n        {}\n        {success && <Message variant='success'>Profile Updated</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n        </>\n      )}\n\n{pathname === '/my-account/cgkit-wishlist/' && (\n<WishlistScreen history={history} match={match}/>\n\n)}\n\n{pathname === '/my-account/lws_woorewards/' && (\n      <>\n     <h1>Your Points Balance</h1>\n     <h2 className='border'>0 Points</h2>\n     <h1>Available Rewards</h1>\n     <h1>How to earn points</h1>\n     <h2>\n      Spand Money\n      <br/>\n      1 Point/ 100/-\n     </h2>\n</>\n\n)}\n\n\n{/* ADMIN RENDERS  */}\n\n{pathname === '/my-account/users/' && (\n       <UserListScreen/>\n      )}\n\n\n{pathname === '/my-account/products/' && (\n       <ProductListScreen history={history} match={match}/>\n      )}\n\n\n{pathname === '/my-account/categories/' && (\n       <CategoryListScreen history={history} match={match}/>\n      )}\n\n{pathname === '/my-account/orders/' && (\n       <OrderListScreen  history={history} match={match}/>\n      )}\n\n\n{pathname === `/my-account/users/:id/edit` && (\n       <UserEditScreen match={match}/>\n      )}\n\n\n\n      </Col>\n    </Row>\n    </>\n  )\n}\n\nexport default ProfileScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport {  Button, Row, Col, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { login, register } from '../actions/userActions'\nimport { Checkbox, Form, Input } from 'antd'\nimport ProfileScreen from './ProfileScreen'\n\nconst LoginScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const [message,setMessage] = useState(null);\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    // if (userInfo) {\n    //   history.push(redirect)\n    // }\n  }, [history, userInfo, redirect])\n\n  const submitLoginHandler = (values) => {\n    console.log(\"submitted \",values);\n    const { email, password } = values;\n    dispatch(login(email, password));\n  };\n\n  const submitRegisterHandler = (values) => {\n    console.log(\"submitted register \",values);\n    const { name, password,confirmPassword } = values;\n\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Container>\n      {!userInfo ? <>\n        <h1>My Account</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {message && <Message variant='danger'>{message}</Message>}\n\n      {loading && <Loader />}\n\n      <Row>\n        <Col md={6}>\n          <h3>Login</h3>\n          <Form\n            initialValues={{ remember: true }}\n            onFinish={submitLoginHandler}\n            layout=\"vertical\"\n            name=\"basic\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n          \n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n  >\n    <Form.Item\n      label=\"Email address\"\n      name=\"email\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your username or email!',\n        },\n      ]}\n    >\n      <Input\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n    </Form.Item>\n\n    <Form.Item\n      label=\"Password\"\n      name=\"password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!',\n        },\n      ]}\n    >\n      <Input.Password\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n      />\n    </Form.Item>\n\n    <Form.Item\n      name=\"remember\"\n      valuePropName=\"checked\"\n      wrapperCol={{\n        offset: 0,\n        span: 16,\n      }}\n    >\n      <Checkbox>Remember me</Checkbox>\n    </Form.Item>\n\n    <Form.Item\n      wrapperCol={{\n        offset: 0,\n        span: 16,\n      }}\n    >\n      <Button variant='success' type=\"submit\" htmlType=\"submit\">\n        Login\n      </Button>\n    </Form.Item>\n  </Form>\n  <Link to=\"/lost-password\">Lost Your Password</Link>\n\n\n        </Col>\n\n        <Col md={6}>\n          <h3>Register</h3>\n          <Form\n            initialValues={{ remember: true }}\n            onFinish={submitRegisterHandler}\n            layout=\"vertical\"\n            name=\"basic\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n          \n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n  >\n    <Form.Item\n      label=\"Name\"\n      name=\"name\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your Name',\n        },\n      ]}\n    >\n      <Input\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n    </Form.Item>\n\n\n    <Form.Item\n      label=\"Email address\"\n      name=\"Email\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your username or email!',\n        },\n      ]}\n    >\n      <Input\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n      />\n    </Form.Item>\n\n    <Form.Item\n      label=\"Password\"\n      name=\"password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!',\n        },\n      ]}\n    >\n      <Input.Password\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n      />\n    </Form.Item>\n\n    <Form.Item\n      label=\"Confirm Password\"\n      name=\"confirmPassword\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!',\n        },\n      ]}\n    >\n      <Input.Password\n      value={confirmPassword}\n      onChange={(e) => setConfirmPassword(e.target.value)}\n      \n      />\n    </Form.Item>\n\n\n    <Form.Item\n      wrapperCol={{\n        offset: 0,\n        span: 16,\n      }}\n    >\n      <Button variant='success' type=\"submit\" htmlType=\"submit\">\n        Register\n      </Button>\n    </Form.Item>\n  </Form>\n\n\n        </Col>\n      </Row>\n      </> : (<ProfileScreen/>)}\n    \n      \n    </Container>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/my-account?redirect=${redirect}` : '/my-account'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/my-account/'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>County</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter County'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress.address) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n      dispatch({ type: USER_DETAILS_RESET })\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n    // eslint-disable-next-line\n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address:</strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x Ksh.{item.price} = Ksh.{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>Ksh.{cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>Ksh.{cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>Ksh.{cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>Ksh.{cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/my-account')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('https://bobliquorstoreapi.onrender.com/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x Ksh.{item.price} = Ksh.{item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>Ksh.{order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>Ksh.{order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>Ksh.{order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>Ksh.{order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport { listCategories } from '../actions/categoryActions'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const categoryList = useSelector((state) => state.categoryList)\n  const { categories } = categoryList\n\n  \n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/my-account/products/')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n        dispatch(listCategories())\n        } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('https://bobliquorstoreapi.onrender.com/api/upload', formData, config)\n\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/my-account/products/' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n              as=\"select\"\n              value={category}\n              onChange={(e) => setCategory(e.target.value)}\n            >\n              <option>Select Category</option>\n              {categories &&\n                categories.map((i, index) => (\n                  <option key={i._id} value={i._id}>\n                    {i.name}\n                  </option>\n                ))}\n            </Form.Control>\n\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { CATEGORY_UPDATE_RESET } from '../constants/categoryConstants'\nimport { getCategoryDetails, updateCategory } from '../actions/categoryActions'\n\nconst CategoryEditScreen = ({ match, history }) => {\n  const categoryId = match.params.id\n\n  const [name, setName] = useState('')\n  const [description, setDescription] = useState('')\n  const [image,setImage] = useState('');\n\n  const dispatch = useDispatch()\n\n  const categoryDetails = useSelector((state) => state.categoryDetails)\n  const { loading, error, category } = categoryDetails\n\n  const categoryUpdate = useSelector((state) => state.categoryUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = categoryUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: CATEGORY_UPDATE_RESET })\n      history.push('/my-account/categories/')\n    } else {\n      if (!category.name || category._id !== categoryId) {\n        dispatch(getCategoryDetails(categoryId))\n      } else {\n        setName(category.name)\n        setDescription(category.description)\n        setImage(category.image)\n      }\n    }\n  }, [dispatch, history, categoryId, category, successUpdate])\n\n  \n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateCategory({\n        _id: categoryId,\n        name,\n        description,\n        image\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/my-account/categories/' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Category</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter Image URL'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default CategoryEditScreen\n","import React, { useEffect } from 'react'\nimport { Card, Col, Container, Form, ListGroup, Row } from 'react-bootstrap'\nimport { listProducts } from '../actions/productActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Product from '../components/Product'\n\nconst CategoryProductsScreen = ({ match }) => {\n    const categoryId = match.params.id\n    const dispatch = useDispatch()\n    \n    const productList = useSelector((state) => state.productList)\n    const { loading, error, products, page, pages } = productList\n  \n    useEffect(() => {\n        dispatch(listProducts())\n      }, [dispatch])\n    return(\n    <Container>\n    <Row>\n        <Col md={2}>\n        <Form className=\"facetwp-sort\">\n  <Form.Control as=\"select\" className=\"facetwp-sort-select\">\n    <option value=\"default\">Sort by</option>\n    <option value=\"title_asc\">Title (A-Z)</option>\n    <option value=\"title_desc\">Title (Z-A)</option>\n    <option value=\"date_desc\">Date (Newest)</option>\n    <option value=\"price_asc\">Price: Low to High</option>\n    <option value=\"price_desc\">Price: High to Low</option>\n  </Form.Control>\n</Form>\n\n\n<div id=\"text-25\" className=\"facet-wrap widget widget_text\">\n  <div className=\"gamma widget-title\">Categories</div>\n  <div className=\"textwidget\">\n    <div className=\"facetwp-facet facetwp-facet-categories facetwp-type-checkboxes\" data-name=\"categories\" data-type=\"checkboxes\">\n      <div className=\"facetwp-checkbox\" data-value=\"red-wine\">\n        <input type=\"checkbox\" />\n        <label>Red Wine <span className=\"facetwp-counter\">(94)</span></label>\n      </div>\n      <div className=\"facetwp-checkbox\" data-value=\"white-wine\">\n        <input type=\"checkbox\" />\n        <label>White Wine <span className=\"facetwp-counter\">(77)</span></label>\n      </div>\n      <div className=\"facetwp-checkbox\" data-value=\"red-sweet-wine\">\n        <input type=\"checkbox\" />\n        <label>Red Sweet Wine <span className=\"facetwp-counter\">(31)</span></label>\n      </div>\n      <div className=\"facetwp-checkbox\" data-value=\"sparkling-wine\">\n        <input type=\"checkbox\" />\n        <label>Sparkling Wine <span className=\"facetwp-counter\">(29)</span></label>\n      </div>\n      <div className=\"facetwp-checkbox\" data-value=\"rose-wine\">\n        <input type=\"checkbox\" />\n        <label>Rosé Wine <span className=\"facetwp-counter\">(21)</span></label>\n      </div>\n      <div className=\"facetwp-overflow facetwp-hidden\">\n        <div className=\"facetwp-checkbox\" data-value=\"sweet-white-wine\">\n          <input type=\"checkbox\" />\n          <label>Sweet White Wine <span className=\"facetwp-counter\">(15)</span></label>\n        </div>\n        <div className=\"facetwp-checkbox\" data-value=\"non-alcoholic-sparkling\">\n          <input type=\"checkbox\" />\n          <label>Non-Alcoholic Sparkling <span className=\"facetwp-counter\">(9)</span></label>\n        </div>\n        <div className=\"facetwp-checkbox\" data-value=\"champagne\">\n          <input type=\"checkbox\" />\n          <label>Champagne <span className=\"facetwp-counter\">(6)</span></label>\n        </div>\n        <div className=\"facetwp-checkbox\" data-value=\"flavoured-wine\">\n          <input type=\"checkbox\" />\n          <label>Flavoured Wine <span className=\"facetwp-counter\">(4)</span></label>\n        </div>\n        <div className=\"facetwp-checkbox\" data-value=\"prosecco\">\n          <input type=\"checkbox\" />\n          <label>Prosecco <span className=\"facetwp-counter\">(3)</span></label>\n        </div>\n      </div>\n      <a className=\"facetwp-toggle\">See 5 more</a>\n      <a className=\"facetwp-toggle facetwp-hidden\">See less</a>\n    </div>\n  </div>\n</div>\n\n\n\n        </Col>\n\n        <Col md={10}>\n        <Row>\n        {products\n  .filter((product) => product.category === categoryId) // Filter products by category\n  .map((product) => (\n    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n      <Product product={product} />\n    </Col>\n  ))}\n\n          </Row>\n\n        </Col>\n    </Row>\n    </Container>\n)\n}\n\nexport default CategoryProductsScreen","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card, Container } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst BasketScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/my-account/?redirect=shipping')\n  }\n\n  return (\n    <Container>\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>Ksh.{item.price}</Col>\n                  <Col md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                items\n              </h2>\n              Ksh.\n              {cartItems\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n    </Container>\n  )\n}\n\nexport default BasketScreen\n","import { Form, Input, Button, message } from 'antd';\nimport React, { useState } from 'react';\nimport { useDispatch,useSelector } from 'react-redux';\nimport { resetPassword } from '../actions/userActions';\nimport { Container } from 'react-bootstrap';\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\n\n\nconst LostPasswordScreen = () => {\n  const key = 'updatable';\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n  const [message,setMessage] = useState(null);\n\n  const userResetPassword = useSelector((state) => state.userResetPassword)\n  const { loading, error, success } = userResetPassword\n\n\n  const submitPasswordHandler = async (values) => {\n    try {\n      const { Email } = values;\n      await dispatch(resetPassword(Email));\n   \n    } catch (error) {\n      message.error(\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : 'Failed to reset password.'\n      );\n    }\n  };\n  \n  \n  \n\n  return (\n    <Container>\n      <div className=\"entry-content my-4\">\n        <div className=\"woocommerce\">\n          <div className=\"woocommerce-notices-wrapper\"></div>\n          <p>\n            Lost your password? Please enter your username or email address. You will receive a\n            link to create a new password via email.\n          </p>\n          {error && <Message variant='danger'>{error}</Message>}\n          {success && <Message variant='success'>{success.message}</Message>}\n          {loading && <Loader />}\n\n          \n          <Form\n            initialValues={{ remember: true }}\n            onFinish={submitPasswordHandler}\n            layout=\"vertical\"\n            name=\"basic\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 24,\n            }}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              label=\"Email address\"\n              name=\"Email\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Please input your username or email!',\n                },\n              ]}\n            >\n              <Input value={email} onChange={(e) => setEmail(e.target.value)} />\n            </Form.Item>\n\n            <Form.Item\n              wrapperCol={{\n                offset: 0,\n                span: 16,\n              }}\n            >\n              <Button variant=\"success\" type=\"primary\" htmlType=\"submit\">\n                Reset Password\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default LostPasswordScreen;\n","import { Form,Input } from 'antd';\nimport React, { useState, useEffect } from 'react'\nimport {  Button, Container } from 'react-bootstrap';\nimport { changePassword } from '../actions/userActions';\nimport { useDispatch,useSelector } from 'react-redux';\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { useParams } from 'react-router-dom';\n\nconst NewPasswordScreen = () => {\n  const { id } = useParams();\n  const { token } = useParams();\n\n\n  \n  const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const userChangePassword = useSelector((state) => state.userChangePassword)\n    const { loading, error, success } = userChangePassword\n\n    \n    const dispatch = useDispatch()\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo } = userLogin\n\n\n  const submitPasswordHandler = (values) => {\n    console.log(\"submitted \",values);\n    const { password,confirmpassword } = values;\n\n    if (password !== confirmpassword) {\n      setMessage('Passwords do not match')\n    }\n    else{\n    dispatch(changePassword(id,token,password))\n\n    }\n    // dispatch(resetPassword(Email));\n  };\n\n  const onFinishFailed = (errorInfo) => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return (\n    <Container>\n    <div className=\"entry-content my-4\">\n      <div className=\"woocommerce\">\n        <div className=\"woocommerce-notices-wrapper\"></div>\n\n        <p>Enter a new password below</p>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n          {success && <Message variant='success'>{success.message}</Message>}\n          {loading && <Loader />}\n\n        <Form\n            initialValues={{ remember: true }}\n            onFinish={submitPasswordHandler}\n            layout=\"vertical\"\n            name=\"basic\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n          \n            onFinishFailed={onFinishFailed}\n            autoComplete=\"off\"\n  >\n    <Form.Item\n      label=\"Password\"\n      name=\"password\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!',\n        },\n      ]}\n    >\n      <Input.Password\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n      />\n    </Form.Item>\n\n\n    <Form.Item\n      label=\"Confirm Password\"\n      name=\"confirmpassword\"\n      rules={[\n        {\n          required: true,\n          message: 'Please input your password!',\n        },\n      ]}\n    >\n      <Input.Password\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n      />\n    </Form.Item>\n \n    <Form.Item\n      wrapperCol={{\n        offset: 0,\n        span: 16,\n      }}\n    >\n      <Button variant='success' type=\"submit\" htmlType=\"submit\">\n        Reset Password\n      </Button>\n    </Form.Item>\n  </Form>\n      </div>\n    </div>\n    </Container>\n  );\n};\n\nexport default NewPasswordScreen;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Steps, Input, Button } from 'antd';\nimport { Card, Col, Container, Image, ListGroup, Row } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport {\n  toLatLon,\n  toLatitudeLongitude,\n  headingDistanceTo,\n  moveTo,\n  insidePolygon,\n} from 'geolocation-utils';\nimport GoogleMapReact from 'google-map-react';\nimport Message from '../components/Message';\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nconst CheckoutScreen = ({ location, history }) => {\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n  const [error, setError] = useState(null);\n  const [isInsidePolygon, setIsInsidePolygon] = useState(false); // Track whether the current location is inside the polygon\n\n  const dispatch = useDispatch();\n\n  const cart = useSelector((state) => state.cart);\n  const { cartItems, shippingAddress } = cart;\n  const getLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setLatitude(position.coords.latitude);\n          setLongitude(position.coords.longitude);\n\n          // Check if the current location is inside the polygon\n          const isInside = insidePolygon(\n            [position.coords.latitude, position.coords.longitude],\n            polygon\n          );\n          setIsInsidePolygon(isInside);\n        },\n        (error) => {\n          setError(error.message);\n        }\n      );\n    } else {\n      setError('Geolocation is not supported by this browser.');\n    }\n  };\n  useEffect(() => {\n\n\n    getLocation();\n  }, []);\n\n  const polygon = [\n    [-0.699174, 37.209438],\n    [-0.754702, 37.156481],\n    [-0.723205, 37.118458],\n    [-0.69145, 37.148069],\n  ];\n\n  const handleRetry = () => {\n    setLatitude(null);\n    setLongitude(null);\n    setError(null);\n    setIsInsidePolygon(false);\n    getLocation();\n  };\n\n  return (\n    <Container>\n      <Steps\n        className='my-2'\n        current={1}\n        items={[\n          {\n            title: 'Shipping Basket',\n          },\n          {\n            title: 'Details and Checkout',\n          },\n          {\n            title: 'Confirmation',\n          },\n        ]}\n      />\n\n      {!latitude && !longitude && !error ? (\n        <p>Loading location...</p>\n      ) : error ? (\n        <div>\n          <Message variant='danger'>\n            {error}\n            <br />\n            <Button onClick={handleRetry}>Retry</Button>\n          </Message>\n        </div>\n      ) : !isInsidePolygon ? (\n        <div>\n          <Message variant='danger'>\n            Sorry. You cannot proceed since you are not in the designated location region.\n            <br />\n            <Button onClick={handleRetry}>Retry</Button>\n          </Message>\n          {latitude} , {longitude}\n        </div>\n      ) : (\n        <div>\n    {/* <div><p>Have a coupon? Cool! <Link to=\"#\">Redeem it here</Link></p></div>\n  <div>\n    <p>Your glass is almost full...</p>\n    <p>Fill your details here <i className=\"fas fa-arrow-down\"></i></p>\n  </div> */}\n  <Row>\n    <Col md={6}>\n    <Form \n    // onFinish={onFinish}\n    layout=\"vertical\"\n    >\n      <div>\n        <Row>\n            <Col md={6}>\n            <Form.Item\n          label=\"First Name\"\n          name=\"firstName\"\n          rules={[{ required: true, message: 'Please enter your first name' }]}\n        >\n          <Input />\n        </Form.Item>\n            </Col>\n            <Col md={6}>\n            <Form.Item\n          label=\"Last Name\"\n          name=\"lastName\"\n          rules={[{ required: true, message: 'Please enter your last name' }]}\n        >\n          <Input />\n        </Form.Item>\n            </Col>\n        </Row>\n\n\n      </div>\n\n      <Form.Item\n        label=\"Phone\"\n        name=\"Phone\"\n        rules={[\n          { required: true, message: 'Please enter your Phone Number' },\n          { type: 'number', message: 'Please enter a valid phone number' },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n\n      <Form.Item\n        label=\"Email\"\n        name=\"Email\"\n        rules={[\n          { required: true, message: 'Please enter your Email Address' },\n          { type: 'email', message: 'Please enter a valid email address' },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      {/* <Form.Item\n        label=\"Delivery Address\"\n        name=\"delivery_address\"\n        rules={[\n          { required: true, message: 'Please enter your Delivery Address' },\n          { type: 'text', message: 'Please enter a valid Delivery Address' },\n        ]}\n      >\n        <Input />\n      </Form.Item> */}\n\n<div>\n      {latitude && longitude ? (\n        <p>\n          Latitude: {latitude}, Longitude: {longitude}\n        </p>\n      ) : error ? (\n        <p>Error: {error}</p>\n      ) : (\n        <p>Loading location...</p>\n      )}\n    </div>\n\n    {/* <div style={{height:\"100px\",width: '100%' }}>\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"\" }}\n        defaultCenter={defaultProps.center}\n        defaultZoom={defaultProps.zoom}\n      >\n        <AnyReactComponent\n          lat={latitude}\n          lng={longitude}\n          text=\"My Location\"\n        />\n      </GoogleMapReact>\n    </div> */}\n    \n\n    <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d31916.009556217203!2d37.1352006026841!3d-0.7224033406879049!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x1828a28207db7113%3A0xbc8b3625ac089be8!2sMurang&#39;a!5e0!3m2!1sen!2ske!4v1688477953494!5m2!1sen!2ske\" width=\"450\" height=\"450\" style={{\"border\":0, allowfullscreen:\"\", loading:\"lazy\", referrerpolicy:\"no-referrer-when-downgrade\"}}></iframe>\n      <Form.Item\n        label=\"Additional Notes\"\n        name=\"additional_notes\"\n        rules={[\n          { required: false, message: 'Please enter your Delivery Address' },\n          { type: 'text', message: 'Please enter a valid Delivery Address' },\n        ]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\n      </Form.Item>\n    </Form>\n\n\n    </Col>\n    <Col md={6}>\n    <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={5}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  \n                  <Col md={2}>\n                    * {item.qty}\n                  \n                  </Col>\n\n                  <Col md={2}>Ksh.{item.price}</Col>\n\n                  {/* <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col> */}\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n\n          <Card className='mt-auto'>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <Row>\n                    <Col md={6}>\n                        <p>\n                        Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                  items\n                        </p>\n                    </Col>\n                    <Col md={6}>\n                    Ksh.\n                    {cartItems\n                    .reduce((acc, item) => acc + item.qty * item.price, 0)\n                    .toFixed(2)}\n                    </Col>\n                </Row>\n\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n\n                {shippingAddress.length > 0 ? (<Row>\n                    <Col md={6}>\n                        Delivery\n\n                    </Col>\n                    <Col md={6}>\n                        Ksh 249\n                    </Col>\n                </Row>): (<Row>\n                    <Col md={6}>\n                        Delivery\n\n                    </Col>\n                    <Col md={6}>\n                    There are no shipping options available. Please ensure that your address has been entered correctly, or contact us if you need any help.\n                    </Col>\n                </Row>)}\n                \n\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n               <Row>\n                <Col md={6}>\n                    <b>Total</b>\n                </Col>\n                <Col md={6}>\n                    <b>Ksh 14,394</b>\n                    <br/>\n                    <small>\n                    (includes KSh 1,951 VAT)\n                     </small>\n                </Col>\n                </Row>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n\n          <Card className='mt-2'>\n          <Card.Body>\n        <Card.Title>\n        <Row>\n              <Col md={8}>\n                  MPESA EXPRESS\n              </Col>\n              <Col md={4}>\n                  <img className='w-100' src=\"https://www.oaks.delivery/wp-content/plugins/woocommerce-kenpesa-gateway/assets/images/lipa-na-mpesa.png\" />\n              </Col>\n            </Row>\n        </Card.Title>\n        <Card.Text>Send an M-Pesa payment request to your phone number.</Card.Text>\n      </Card.Body>\n          </Card>\n          \n          By placing an order I confirm that I'm 18 years or older and accept the <Link to=\"#\"> terms and conditions</Link>\n\n<Button className='w-100 btn btn-block btn-success p-2'>\n  Proceed to Payment\n</Button>\n    </Col>\n  </Row>\n  \n  </div>\n      )}\n    </Container>\n  );\n};\n\nexport default CheckoutScreen;\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport CategoryListScreen from './screens/CategoryListScreen'\nimport CategoryEditScreen from './screens/CategoryEditScreen'\nimport { useSelector } from 'react-redux'\nimport CategoryProductsScreen from './screens/CategoryProductsScreen'\nimport WishlistScreen from './screens/WishlistScreen'\nimport BasketScreen from './screens/BasketScreen'\nimport OrdersScreen from './screens/OrdersScreen'\nimport LostPasswordScreen from './screens/LostPasswordScreen'\nimport NewPasswordScreen from './screens/NewPasswordScreen'\nimport CheckoutScreen from './screens/CheckoutScreen'\n\nconst App = () => {\n  const categoryList = useSelector((state) => state.categoryList)\n  const { categories } = categoryList\n  return (\n    <Router>\n      <Header  categories={categories}/>\n      <main>\n      <Route path='/category/:id' component={CategoryProductsScreen} />\n      {/* <Route path='/my-account/orders' component={OrdersScreen} /> */}\n      \n      \n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/my-account' component={LoginScreen} />\n          <Route path='/wishlist' component={WishlistScreen} />\n          <Route path='/checkout' component={CheckoutScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/basket/:id?' component={BasketScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path=\"/lost-password\" component={LostPasswordScreen} />\n          <Route path=\"/new-password/:id/:token\" component={NewPasswordScreen} />\n\n          \n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n\n<Route\n            path='/admin/categorylist'\n            component={CategoryListScreen}\n            exact\n          />\n          \n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/category/:id/edit' component={CategoryEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n       \n\n       \n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}